{"ast":null,"code":"var _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Dashboard/index.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Grid, Typography, TextField, Input, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport Table from '../Table';\nimport StatsCard from './StatsCard';\nimport useStyles from './style';\n\nconst Dashboard = () => {\n  const [startDate, setStartDate] = React.useState(moment(new Date().setHours(0, 0, 0, 0)).format('YYYY-MM-DDTHH:mm'));\n  const [endDate, setEndDate] = React.useState(moment(new Date().setHours(24, 0, 0, 0)).subtract(1, 'minute').format('YYYY-MM-DDTHH:mm'));\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Besucher\"), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Besucher abmelden\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    style: {\n      paddingRight: '12px'\n    },\n    label: \"Startdatum\",\n    type: \"datetime-local\",\n    defaultValue: startDate,\n    onChange: event => setStartDate(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), __jsx(TextField, {\n    label: \"Enddatum\",\n    type: \"datetime-local\",\n    defaultValue: endDate,\n    onChange: event => setEndDate(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    placeholder: \"Vorname\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    placeholder: \"Name\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Suchen\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(StatsCard, {\n    title: \"Anzahl Besucher im Zeitraum\",\n    value: \"200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(StatsCard, {\n    title: \"Anzahl Besucher aktuell\",\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    rows: [{\n      id: '1223',\n      startDate: __jsx(React.Fragment, null, \"20.03.2020 \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 32\n        }\n      }), \" 12:33 Uhr\"),\n      endDate: __jsx(React.Fragment, null, \"20.03.2020 \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 32\n        }\n      }), \" 12:33 Uhr\"),\n      name: 'Gilli',\n      firstName: 'Stephan',\n      email: 'gilli.stephan@gmail.com',\n      rooms: ['Raum 4', 'Raum 6']\n    }, {\n      id: '456',\n      startDate: __jsx(React.Fragment, null, \"20.03.2020 \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 32\n        }\n      }), \" 12:33 Uhr\"),\n      endDate: __jsx(React.Fragment, null, \"20.03.2020 \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 32\n        }\n      }), \" 12:33 Uhr\"),\n      name: 'Gilli',\n      firstName: 'Stephan',\n      email: 'gilli.stephan@gmail.com',\n      rooms: ['Raum 1', 'Raum 2']\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Dashboard/index.tsx"],"names":["React","Grid","Typography","TextField","Input","Button","moment","Table","StatsCard","useStyles","Dashboard","startDate","setStartDate","useState","Date","setHours","format","endDate","setEndDate","subtract","classes","root","paddingRight","event","target","value","width","marginTop","id","name","firstName","email","rooms"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Grid, Typography, TextField, Input, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport Table from '../Table';\nimport StatsCard from './StatsCard';\nimport useStyles from './style';\n\nconst Dashboard: React.FunctionComponent = () => {\n  const [startDate, setStartDate] = React.useState(\n    moment(new Date().setHours(0, 0, 0, 0)).format('YYYY-MM-DDTHH:mm')\n  );\n  const [endDate, setEndDate] = React.useState(\n    moment(new Date().setHours(24, 0, 0, 0))\n      .subtract(1, 'minute')\n      .format('YYYY-MM-DDTHH:mm')\n  );\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"body1\">Besucher</Typography>\n          <Typography variant=\"h6\">Besucher abmelden</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Grid container justify=\"flex-end\">\n            <TextField\n              style={{ paddingRight: '12px' }}\n              label=\"Startdatum\"\n              type=\"datetime-local\"\n              defaultValue={startDate}\n              onChange={event => setStartDate(event.target.value)}\n            />\n            <TextField\n              label=\"Enddatum\"\n              type=\"datetime-local\"\n              defaultValue={endDate}\n              onChange={event => setEndDate(event.target.value)}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6} lg={3} xl={3} alignItems=\"center\">\n          <Input\n            placeholder=\"Vorname\"\n            style={{\n              width: '100%',\n            }}\n          />\n          <div style={{ marginTop: '4px' }} />\n          <Input\n            placeholder=\"Name\"\n            style={{\n              width: '100%',\n            }}\n          />\n          <div style={{ marginTop: '4px' }} />\n          <Button variant=\"contained\" color=\"primary\">\n            Suchen\n          </Button>\n        </Grid>\n        <Grid item xs={12} sm={6} lg={3} xl={3}>\n          <StatsCard title=\"Anzahl Besucher im Zeitraum\" value=\"200\" />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={3} xl={3}>\n          <StatsCard title=\"Anzahl Besucher aktuell\" value=\"3\" />\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Table\n            rows={[\n              {\n                id: '1223',\n                startDate: (\n                  <>\n                    20.03.2020 <br /> 12:33 Uhr\n                  </>\n                ),\n                endDate: (\n                  <>\n                    20.03.2020 <br /> 12:33 Uhr\n                  </>\n                ),\n                name: 'Gilli',\n                firstName: 'Stephan',\n                email: 'gilli.stephan@gmail.com',\n                rooms: ['Raum 4', 'Raum 6'],\n              },\n              {\n                id: '456',\n                startDate: (\n                  <>\n                    20.03.2020 <br /> 12:33 Uhr\n                  </>\n                ),\n                endDate: (\n                  <>\n                    20.03.2020 <br /> 12:33 Uhr\n                  </>\n                ),\n                name: 'Gilli',\n                firstName: 'Stephan',\n                email: 'gilli.stephan@gmail.com',\n                rooms: ['Raum 1', 'Raum 2'],\n              },\n            ]}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}