{"ast":null,"code":"var _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/pages/[locale]/visitor/register.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport useRestClient from '../../../hooks/useRestClient';\nimport Register from '../../../components/RegisterVisit';\n\nconst Visitors = () => {\n  const {\n    client,\n    setIsLoading,\n    setHasError\n  } = useRestClient();\n  const [gebaeude, setGebaeude] = React.useState(null);\n  React.useEffect(() => {\n    async function getGebaude() {\n      if (client) {\n        const res = await client.getGebauede();\n        if (res) setGebaeude(res);\n      }\n    }\n\n    getGebaude();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Besuch erfolgreich angelegt.\"), __jsx(Register, {\n    buildings: gebaeude,\n    createNewVisitor: async props => {\n      if (client) {\n        setIsLoading(true);\n\n        try {\n          const res = await client.postBesucher({\n            person: {\n              name: props.name,\n              vorname: props.firstName,\n              email: props.email,\n              telefon: props.phone\n            },\n            gesundheitsstatus: 'gesund'\n          });\n\n          if (res && res.id) {\n            await client.postBesuch({\n              besucher: [res.id],\n              raeume: props.rooms\n            });\n          }\n\n          setIsLoading(false);\n        } catch (error) {\n          console.log('here');\n          setHasError(true);\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Visitors;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/pages/[locale]/visitor/register.tsx"],"names":["React","Alert","useRestClient","Register","Visitors","client","setIsLoading","setHasError","gebaeude","setGebaeude","useState","useEffect","getGebaude","res","getGebauede","props","postBesucher","person","name","vorname","firstName","email","telefon","phone","gesundheitsstatus","id","postBesuch","besucher","raeume","rooms","error","console","log"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,QAAP,MAAqB,mCAArB;;AAEA,MAAMC,QAAiC,GAAG,MAAM;AAC9C,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA;AAAxB,MAAwCL,aAAa,EAA3D;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BT,KAAK,CAACU,QAAN,CAAe,IAAf,CAAhC;AACAV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,mBAAeC,UAAf,GAA4B;AAC1B,UAAIP,MAAJ,EAAY;AACV,cAAMQ,GAAG,GAAG,MAAMR,MAAM,CAACS,WAAP,EAAlB;AACA,YAAID,GAAJ,EAASJ,WAAW,CAACI,GAAD,CAAX;AACV;AACF;;AACDD,IAAAA,UAAU;AACX,GARD,EAQG,EARH;AAUA,SACE,4BACE,MAAC,KAAD;AAAO,IAAA,QAAQ,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE,MAAC,QAAD;AACE,IAAA,SAAS,EAAEJ,QADb;AAEE,IAAA,gBAAgB,EAAE,MAAMO,KAAN,IAAe;AAC/B,UAAIV,MAAJ,EAAY;AACVC,QAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,YAAI;AACF,gBAAMO,GAAG,GAAG,MAAMR,MAAM,CAACW,YAAP,CAAoB;AACpCC,YAAAA,MAAM,EAAE;AACNC,cAAAA,IAAI,EAAEH,KAAK,CAACG,IADN;AAENC,cAAAA,OAAO,EAAEJ,KAAK,CAACK,SAFT;AAGNC,cAAAA,KAAK,EAAEN,KAAK,CAACM,KAHP;AAINC,cAAAA,OAAO,EAAEP,KAAK,CAACQ;AAJT,aAD4B;AAOpCC,YAAAA,iBAAiB,EAAE;AAPiB,WAApB,CAAlB;;AASA,cAAIX,GAAG,IAAIA,GAAG,CAACY,EAAf,EAAmB;AACjB,kBAAMpB,MAAM,CAACqB,UAAP,CAAkB;AACtBC,cAAAA,QAAQ,EAAE,CAACd,GAAG,CAACY,EAAL,CADY;AAEtBG,cAAAA,MAAM,EAAEb,KAAK,CAACc;AAFQ,aAAlB,CAAN;AAID;;AACDvB,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SAjBD,CAiBE,OAAOwB,KAAP,EAAc;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAzB,UAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF;AACF,KA3BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAkCD,CA/CD;;AAiDA,eAAeH,QAAf","sourcesContent":["import * as React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport useRestClient from '../../../hooks/useRestClient';\nimport Register from '../../../components/RegisterVisit';\n\nconst Visitors: React.FunctionComponent = () => {\n  const { client, setIsLoading, setHasError } = useRestClient();\n  const [gebaeude, setGebaeude] = React.useState(null);\n  React.useEffect(() => {\n    async function getGebaude() {\n      if (client) {\n        const res = await client.getGebauede();\n        if (res) setGebaeude(res);\n      }\n    }\n    getGebaude();\n  }, []);\n\n  return (\n    <>\n      <Alert severity=\"success\">Besuch erfolgreich angelegt.</Alert>\n      <Register\n        buildings={gebaeude}\n        createNewVisitor={async props => {\n          if (client) {\n            setIsLoading(true);\n            try {\n              const res = await client.postBesucher({\n                person: {\n                  name: props.name,\n                  vorname: props.firstName,\n                  email: props.email,\n                  telefon: props.phone,\n                },\n                gesundheitsstatus: 'gesund',\n              });\n              if (res && res.id) {\n                await client.postBesuch({\n                  besucher: [res.id],\n                  raeume: props.rooms,\n                });\n              }\n              setIsLoading(false);\n            } catch (error) {\n              console.log('here');\n              setHasError(true);\n            }\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport default Visitors;\n"]},"metadata":{},"sourceType":"module"}