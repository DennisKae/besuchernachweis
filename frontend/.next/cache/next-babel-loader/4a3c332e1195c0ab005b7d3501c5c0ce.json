{"ast":null,"code":"var _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Dashboard/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Grid, Typography, TextField, Input, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport Table from '../Table';\nimport StatsCard from './StatsCard';\nimport useStyles from './style';\nconst INITIAL_SEARCH_STATE = {\n  startDate: moment(new Date().setHours(0, 0, 0, 0)).format('YYYY-MM-DDTHH:mm'),\n  endDate: moment(new Date().setHours(24, 0, 0, 0)).subtract(1, 'minute').format('YYYY-MM-DDTHH:mm'),\n  firstName: '',\n  lastName: ''\n};\n\nconst Dashboard = () => {\n  const [startDate, setStartDate] = React.useState(INITIAL_SEARCH_STATE.startDate);\n  const [endDate, setEndDate] = React.useState(INITIAL_SEARCH_STATE.endDate);\n  const [inputValues, setInputValues] = React.useState({\n    firstName: INITIAL_SEARCH_STATE.firstName,\n    lastName: INITIAL_SEARCH_STATE.lastName\n  });\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Besucher\"), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Besucher abmelden\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    style: {\n      paddingRight: '12px'\n    },\n    label: \"Startdatum\",\n    type: \"datetime-local\",\n    defaultValue: startDate,\n    onChange: event => setStartDate(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), __jsx(TextField, {\n    label: \"Enddatum\",\n    type: \"datetime-local\",\n    defaultValue: endDate,\n    onChange: event => setEndDate(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(StatsCard, {\n    title: \"Anzahl Besucher im Zeitraum\",\n    value: \"200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(StatsCard, {\n    title: \"Anzahl Besucher aktuell\",\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    placeholder: \"Vorname\",\n    style: {\n      width: '100%'\n    },\n    value: inputValues.firstName,\n    onChange: event => setInputValues(_objectSpread({}, inputValues, {\n      firstName: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    placeholder: \"Name\",\n    style: {\n      width: '100%'\n    },\n    value: inputValues.name,\n    onChange: event => setInputValues(_objectSpread({}, inputValues, {\n      name: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Suchen\"))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    rows: [{\n      id: '1223',\n      startDate: __jsx(React.Fragment, null, \"20.03.2020 \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 32\n        }\n      }), \" 12:33 Uhr\"),\n      endDate: __jsx(React.Fragment, null, \"20.03.2020 \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 32\n        }\n      }), \" 12:33 Uhr\"),\n      name: 'Gilli',\n      firstName: 'Stephan',\n      email: 'gilli.stephan@gmail.com',\n      rooms: ['Raum 4', 'Raum 6']\n    }, {\n      id: '456',\n      startDate: __jsx(React.Fragment, null, \"20.03.2020 \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 32\n        }\n      }), \" 12:33 Uhr\"),\n      endDate: __jsx(React.Fragment, null, \"20.03.2020 \", __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 32\n        }\n      }), \" 12:33 Uhr\"),\n      name: 'Gilli',\n      firstName: 'Stephan',\n      email: 'gilli.stephan@gmail.com',\n      rooms: ['Raum 1', 'Raum 2']\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Dashboard/index.tsx"],"names":["React","Grid","Typography","TextField","Input","Button","moment","Table","StatsCard","useStyles","INITIAL_SEARCH_STATE","startDate","Date","setHours","format","endDate","subtract","firstName","lastName","Dashboard","setStartDate","useState","setEndDate","inputValues","setInputValues","classes","root","paddingRight","event","target","value","width","marginTop","name","id","email","rooms"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Grid, Typography, TextField, Input, Button } from '@material-ui/core';\nimport moment from 'moment';\nimport Table from '../Table';\nimport StatsCard from './StatsCard';\nimport useStyles from './style';\n\nconst INITIAL_SEARCH_STATE = {\n  startDate: moment(new Date().setHours(0, 0, 0, 0)).format('YYYY-MM-DDTHH:mm'),\n  endDate: moment(new Date().setHours(24, 0, 0, 0))\n    .subtract(1, 'minute')\n    .format('YYYY-MM-DDTHH:mm'),\n  firstName: '',\n  lastName: '',\n};\n\nconst Dashboard: React.FunctionComponent = () => {\n  const [startDate, setStartDate] = React.useState(\n    INITIAL_SEARCH_STATE.startDate\n  );\n  const [endDate, setEndDate] = React.useState(INITIAL_SEARCH_STATE.endDate);\n\n  const [inputValues, setInputValues] = React.useState<{\n    name: string;\n    firstName: string;\n  }>({\n    firstName: INITIAL_SEARCH_STATE.firstName,\n    lastName: INITIAL_SEARCH_STATE.lastName,\n  });\n\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"body1\">Besucher</Typography>\n          <Typography variant=\"h6\">Besucher abmelden</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Grid container justify=\"flex-start\">\n            <TextField\n              style={{ paddingRight: '12px' }}\n              label=\"Startdatum\"\n              type=\"datetime-local\"\n              defaultValue={startDate}\n              onChange={event => setStartDate(event.target.value)}\n            />\n            <TextField\n              label=\"Enddatum\"\n              type=\"datetime-local\"\n              defaultValue={endDate}\n              onChange={event => setEndDate(event.target.value)}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6} lg={3} xl={3}>\n          <StatsCard title=\"Anzahl Besucher im Zeitraum\" value=\"200\" />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={3} xl={3}>\n          <StatsCard title=\"Anzahl Besucher aktuell\" value=\"3\" />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={3} xl={3} alignItems=\"center\">\n          <Input\n            placeholder=\"Vorname\"\n            style={{\n              width: '100%',\n            }}\n            value={inputValues.firstName}\n            onChange={event =>\n              setInputValues({\n                ...inputValues,\n                firstName: event.target.value,\n              })\n            }\n          />\n          <div style={{ marginTop: '8px' }} />\n          <Input\n            placeholder=\"Name\"\n            style={{\n              width: '100%',\n            }}\n            value={inputValues.name}\n            onChange={event =>\n              setInputValues({\n                ...inputValues,\n                name: event.target.value,\n              })\n            }\n          />\n          <div style={{ marginTop: '8px' }} />\n          <Button variant=\"contained\" color=\"primary\">\n            Suchen\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Table\n            rows={[\n              {\n                id: '1223',\n                startDate: (\n                  <>\n                    20.03.2020 <br /> 12:33 Uhr\n                  </>\n                ),\n                endDate: (\n                  <>\n                    20.03.2020 <br /> 12:33 Uhr\n                  </>\n                ),\n                name: 'Gilli',\n                firstName: 'Stephan',\n                email: 'gilli.stephan@gmail.com',\n                rooms: ['Raum 4', 'Raum 6'],\n              },\n              {\n                id: '456',\n                startDate: (\n                  <>\n                    20.03.2020 <br /> 12:33 Uhr\n                  </>\n                ),\n                endDate: (\n                  <>\n                    20.03.2020 <br /> 12:33 Uhr\n                  </>\n                ),\n                name: 'Gilli',\n                firstName: 'Stephan',\n                email: 'gilli.stephan@gmail.com',\n                rooms: ['Raum 1', 'Raum 2'],\n              },\n            ]}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}