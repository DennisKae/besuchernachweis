{"ast":null,"code":"var _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/RegisterVisit/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Grid, Typography, Paper, Input, InputLabel, FormControl, Select, MenuItem, Button } from '@material-ui/core';\nimport InputIcon from '@material-ui/icons/Input';\nimport Alert from '@material-ui/lab/Alert';\nimport Table from '../Table';\nimport useRestClient from '../../hooks/useRestClient';\nimport useTableSearch from '../../hooks/useTableSearch';\nimport useTranslations from '../../hooks/useTranslations';\nimport useStyles from './style';\nconst INITIAL_FORM_STATE = {\n  id: null,\n  firstName: '',\n  name: '',\n  email: '',\n  phone: '',\n  building: 0,\n  rooms: [],\n  permissionGranted: false\n};\n\nconst RegisterVisit = () => {\n  // hooks\n  const classes = useStyles();\n  const reducer = useTableSearch();\n  const {\n    t\n  } = useTranslations();\n  const {\n    client,\n    setIsLoading,\n    setHasError\n  } = useRestClient();\n  if (!reducer) return null;\n  const {\n    state,\n    dispatch\n  } = reducer;\n\n  async function getBesucherByFilter() {\n    const res = await client.getBesucherByFilter({\n      skip: state.skip,\n      take: state.limit\n    });\n    if (res) dispatch({\n      type: 'setRows',\n      payload: {\n        rows: res.map(r => ({\n          id: r.id,\n          vorname: 'Max',\n          nachname: 'Mustermann',\n          email: 'max@mustermann.de'\n        })),\n        count: res.length\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    getBesucherByFilter();\n  }, [state.page, state.limit]);\n  const [buildings, setBuildings] = React.useState(null);\n  React.useEffect(() => {\n    async function getGebauede() {\n      const res = await client.getGebauede();\n      if (res) setBuildings(res);\n    }\n\n    getGebauede();\n  }, []);\n  const [rooms, setRooms] = React.useState([]);\n  const [formState, setFormState] = React.useState(INITIAL_FORM_STATE);\n\n  async function registerBesuch() {\n    setIsLoading(true);\n    let id = formState.id;\n\n    try {\n      if (!id) {\n        const res = await client.registerBesucher({\n          person: {\n            name: formState.name,\n            vorname: formState.firstName,\n            email: formState.email,\n            telefon: formState.phone\n          },\n          gesundheitsstatus: 'gesund'\n        });\n\n        if (res && res.id) {\n          id = res.id;\n          await getBesucherByFilter();\n        }\n      }\n\n      await client.registerBesuch({\n        besucher: [id],\n        raeume: formState.rooms\n      });\n      setFormState(INITIAL_FORM_STATE);\n    } catch (error) {\n      setHasError(true);\n    }\n\n    setIsLoading(false);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, \"Neuer Besuch erfolgreich erstellt\"), __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, t('administration')), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, t('visitor-register'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Registrieter Besucher\"), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Besucher ausw\\xE4hlen\"))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, __jsx(Paper, {\n    className: classes.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-first-name'),\n    value: formState.firstName,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      firstName: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-name'),\n    value: formState.name,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      name: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    type: \"email\",\n    placeholder: t('register-email'),\n    value: formState.email,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      email: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-phone'),\n    value: formState.phone,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      phone: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, __jsx(FormControl, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 19\n    }\n  }, __jsx(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, \"Geb\\xE4ude\"), __jsx(Select, {\n    value: formState.building,\n    onChange: event => {\n      setFormState(_objectSpread({}, formState, {\n        building: event.target.value\n      }));\n      const rooms = buildings.filter(b => b.id === event.target.value).map(v => v.raeume);\n      if (rooms) setRooms(rooms[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, buildings && buildings.length > 0 && buildings.map((building, index) => __jsx(MenuItem, {\n    key: index,\n    value: building.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 27\n    }\n  }, building.bezeichnung))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, __jsx(FormControl, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, __jsx(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, t('property-rooms')), rooms && rooms.length > 0 && __jsx(Select, {\n    value: formState.rooms,\n    multiple: true,\n    onChange: event => {\n      setFormState(_objectSpread({}, formState, {\n        rooms: event.target.value\n      }));\n    },\n    input: __jsx(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 23\n    }\n  }, rooms.map((room, index) => {\n    return __jsx(MenuItem, {\n      key: index,\n      value: room.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }, room.bezeichnung);\n  }))))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: async () => registerBesuch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }, t('register')))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    rows: state.rows,\n    rowsPerPageOptions: [25, 50, 100],\n    count: state.count,\n    rowsPerPage: state.limit,\n    page: state.page,\n    onChangePage: (_, newPage) => {\n      const newSkip = newPage > state.page ? state.skip + state.limit : state.skip - state.limit;\n      dispatch({\n        type: 'changePage',\n        payload: {\n          skip: newSkip,\n          page: newPage\n        }\n      });\n    },\n    onChangeRowsPerPage: event => {\n      const limit = Number(event.target.value);\n      dispatch({\n        type: 'changeRowsPerPage',\n        payload: {\n          limit\n        }\n      });\n    },\n    uniqueId: \"id\",\n    toolbarSettings: {\n      title: 'Besucher',\n      tooltipSelected: {\n        title: 'Besucher auswählen',\n        icon: __jsx(InputIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }\n        }),\n        onClick: ids => {\n          if (ids.length) {\n            const id = ids[0];\n            const user = state.rows.filter(u => u.id === id);\n            if (user.length) setFormState({\n              id: user[0].id,\n              firstName: user[0].vorname,\n              name: user[0].nachname,\n              email: user[0].email\n            });\n          }\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default RegisterVisit;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/RegisterVisit/index.tsx"],"names":["React","Grid","Typography","Paper","Input","InputLabel","FormControl","Select","MenuItem","Button","InputIcon","Alert","Table","useRestClient","useTableSearch","useTranslations","useStyles","INITIAL_FORM_STATE","id","firstName","name","email","phone","building","rooms","permissionGranted","RegisterVisit","classes","reducer","t","client","setIsLoading","setHasError","state","dispatch","getBesucherByFilter","res","skip","take","limit","type","payload","rows","map","r","vorname","nachname","count","length","useEffect","page","buildings","setBuildings","useState","getGebauede","setRooms","formState","setFormState","registerBesuch","registerBesucher","person","telefon","gesundheitsstatus","besucher","raeume","error","root","contentContainer","input","event","target","value","width","filter","b","v","index","bezeichnung","room","_","newPage","newSkip","Number","title","tooltipSelected","icon","onClick","ids","user","u"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n  Paper,\n  Input,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Button,\n} from '@material-ui/core';\nimport InputIcon from '@material-ui/icons/Input';\nimport Alert from '@material-ui/lab/Alert';\nimport Table from '../Table';\nimport useRestClient from '../../hooks/useRestClient';\nimport useTableSearch from '../../hooks/useTableSearch';\nimport useTranslations from '../../hooks/useTranslations';\nimport useStyles from './style';\n\nconst INITIAL_FORM_STATE = {\n  id: null,\n  firstName: '',\n  name: '',\n  email: '',\n  phone: '',\n  building: 0,\n  rooms: [],\n  permissionGranted: false,\n};\n\nconst RegisterVisit: React.FunctionComponent = () => {\n  // hooks\n  const classes = useStyles();\n  const reducer = useTableSearch<any>();\n  const { t } = useTranslations();\n  const { client, setIsLoading, setHasError } = useRestClient();\n  if (!reducer) return null;\n\n  const { state, dispatch } = reducer;\n\n  async function getBesucherByFilter() {\n    const res = await client.getBesucherByFilter({\n      skip: state.skip,\n      take: state.limit,\n    });\n\n    if (res)\n      dispatch({\n        type: 'setRows',\n        payload: {\n          rows: res.map((r: any) => ({\n            id: r.id,\n            vorname: 'Max',\n            nachname: 'Mustermann',\n            email: 'max@mustermann.de',\n          })),\n          count: res.length,\n        },\n      });\n  }\n\n  React.useEffect(() => {\n    getBesucherByFilter();\n  }, [state.page, state.limit]);\n\n  const [buildings, setBuildings] = React.useState<any>(null);\n\n  React.useEffect(() => {\n    async function getGebauede() {\n      const res = await client.getGebauede();\n      if (res) setBuildings(res);\n    }\n    getGebauede();\n  }, []);\n\n  const [rooms, setRooms] = React.useState<any>([]);\n  const [formState, setFormState] = React.useState<any>(INITIAL_FORM_STATE);\n\n  async function registerBesuch() {\n    setIsLoading(true);\n    let id: number = formState.id;\n    try {\n      if (!id) {\n        const res = await client.registerBesucher({\n          person: {\n            name: formState.name,\n            vorname: formState.firstName,\n            email: formState.email,\n            telefon: formState.phone,\n          },\n          gesundheitsstatus: 'gesund',\n        });\n        if (res && res.id) {\n          id = res.id;\n          await getBesucherByFilter();\n        }\n      }\n      await client.registerBesuch({\n        besucher: [id],\n        raeume: formState.rooms,\n      });\n\n      setFormState(INITIAL_FORM_STATE);\n    } catch (error) {\n      setHasError(true);\n    }\n    setIsLoading(false);\n  }\n\n  return (\n    <>\n      <Alert severity=\"success\">Neuer Besuch erfolgreich erstellt</Alert>\n      <div className={classes.root}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\">{t('administration')}</Typography>\n            <Typography variant=\"h6\">{t('visitor-register')}</Typography>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\">Registrieter Besucher</Typography>\n            <Typography variant=\"h6\">Besucher auswählen</Typography>\n          </Grid>\n        </Grid>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6}>\n            <Paper className={classes.contentContainer}>\n              <Grid container spacing={4}>\n                <Grid item xs={12} sm={6}>\n                  <Input\n                    className={classes.input}\n                    placeholder={t('register-first-name')}\n                    value={formState.firstName}\n                    onChange={event =>\n                      setFormState({\n                        ...formState,\n                        firstName: event.target.value,\n                      })\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Input\n                    className={classes.input}\n                    placeholder={t('register-name')}\n                    value={formState.name}\n                    onChange={event =>\n                      setFormState({ ...formState, name: event.target.value })\n                    }\n                  />\n                </Grid>\n              </Grid>\n              <Grid container spacing={4}>\n                <Grid item xs={12} sm={6}>\n                  <Input\n                    className={classes.input}\n                    type=\"email\"\n                    placeholder={t('register-email')}\n                    value={formState.email}\n                    onChange={event =>\n                      setFormState({ ...formState, email: event.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <Input\n                    className={classes.input}\n                    placeholder={t('register-phone')}\n                    value={formState.phone}\n                    onChange={event =>\n                      setFormState({ ...formState, phone: event.target.value })\n                    }\n                  />\n                </Grid>\n              </Grid>\n              <Grid container spacing={4}>\n                <Grid item xs={12} sm={6}>\n                  <FormControl style={{ width: '100%' }}>\n                    <InputLabel>Gebäude</InputLabel>\n                    <Select\n                      value={formState.building}\n                      onChange={event => {\n                        setFormState({\n                          ...formState,\n                          building: event.target.value,\n                        });\n                        const rooms = buildings\n                          .filter((b: any) => b.id === event.target.value)\n                          .map((v: any) => v.raeume);\n                        if (rooms) setRooms(rooms[0]);\n                      }}\n                    >\n                      {buildings &&\n                        buildings.length > 0 &&\n                        buildings.map((building: any, index: number) => (\n                          <MenuItem key={index} value={building.id}>\n                            {building.bezeichnung}\n                          </MenuItem>\n                        ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <FormControl style={{ width: '100%' }}>\n                    <InputLabel>{t('property-rooms')}</InputLabel>\n                    {rooms && rooms.length > 0 && (\n                      <Select\n                        value={formState.rooms}\n                        multiple\n                        onChange={event => {\n                          setFormState({\n                            ...formState,\n                            rooms: event.target.value,\n                          });\n                        }}\n                        input={<Input />}\n                      >\n                        {rooms.map((room: any, index: number) => {\n                          return (\n                            <MenuItem key={index} value={room.id}>\n                              {room.bezeichnung}\n                            </MenuItem>\n                          );\n                        })}\n                      </Select>\n                    )}\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Grid container spacing={4}>\n                <Grid item xs={12} sm={6}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={async () => registerBesuch()}\n                  >\n                    {t('register')}\n                  </Button>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Table\n              rows={state.rows}\n              rowsPerPageOptions={[25, 50, 100]}\n              count={state.count}\n              rowsPerPage={state.limit}\n              page={state.page}\n              onChangePage={(_: any, newPage: number) => {\n                const newSkip =\n                  newPage > state.page\n                    ? state.skip + state.limit\n                    : state.skip - state.limit;\n                dispatch({\n                  type: 'changePage',\n                  payload: { skip: newSkip, page: newPage },\n                });\n              }}\n              onChangeRowsPerPage={event => {\n                const limit = Number(event.target.value);\n                dispatch({ type: 'changeRowsPerPage', payload: { limit } });\n              }}\n              uniqueId=\"id\"\n              toolbarSettings={{\n                title: 'Besucher',\n                tooltipSelected: {\n                  title: 'Besucher auswählen',\n                  icon: <InputIcon />,\n                  onClick: ids => {\n                    if (ids.length) {\n                      const id = ids[0];\n                      const user = state.rows.filter(u => u.id === id);\n                      if (user.length)\n                        setFormState({\n                          id: user[0].id,\n                          firstName: user[0].vorname,\n                          name: user[0].nachname,\n                          email: user[0].email,\n                        });\n                    }\n                  },\n                },\n              }}\n            />\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default RegisterVisit;\n"]},"metadata":{},"sourceType":"module"}