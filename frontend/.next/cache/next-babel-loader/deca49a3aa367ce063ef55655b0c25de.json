{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/context/RestContext.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Client from '../rest-client';\nvar client = new Client('');\nvar RestContext = React.createContext({\n  client: client,\n  isLoading: false,\n  setIsLoading: null\n});\nexport var RestProvider = function RestProvider(_ref) {\n  var url = _ref.url,\n      children = _ref.children;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  var client = new Client(url);\n  return __jsx(RestContext.Provider, {\n    value: {\n      client: client,\n      isLoading: isLoading,\n      setIsLoading: setIsLoading\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport default RestContext;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/context/RestContext.tsx"],"names":["React","Client","client","RestContext","createContext","isLoading","setIsLoading","RestProvider","url","children","useState"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAQA,IAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,EAAX,CAAf;AAEA,IAAME,WAAW,GAAGH,KAAK,CAACI,aAAN,CAAkC;AACpDF,EAAAA,MAAM,EAANA,MADoD;AAEpDG,EAAAA,SAAS,EAAE,KAFyC;AAGpDC,EAAAA,YAAY,EAAE;AAHsC,CAAlC,CAApB;AAMA,OAAO,IAAMC,YAAuC,GAAG,SAA1CA,YAA0C,OAAuB;AAAA,MAApBC,GAAoB,QAApBA,GAAoB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,wBAC1CT,KAAK,CAACU,QAAN,CAAwB,KAAxB,CAD0C;AAAA;AAAA,MACrEL,SADqE;AAAA,MAC1DC,YAD0D;;AAE5E,MAAMJ,MAAM,GAAG,IAAID,MAAJ,CAAWO,GAAX,CAAf;AAEA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEN,MAAAA,MAAM,EAANA,MAAF;AAAUG,MAAAA,SAAS,EAATA,SAAV;AAAqBC,MAAAA,YAAY,EAAZA;AAArB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QADH,CADF;AAKD,CATM;AAWP,eAAeN,WAAf","sourcesContent":["import * as React from 'react';\nimport Client from '../rest-client';\n\ntype ContextProps = {\n  client: Client | null;\n  isLoading: boolean;\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>> | null;\n};\n\nconst client = new Client('');\n\nconst RestContext = React.createContext<ContextProps>({\n  client,\n  isLoading: false,\n  setIsLoading: null,\n});\n\nexport const RestProvider: React.FC<{ url: string }> = ({ url, children }) => {\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const client = new Client(url);\n\n  return (\n    <RestContext.Provider value={{ client, isLoading, setIsLoading }}>\n      {children}\n    </RestContext.Provider>\n  );\n};\n\nexport default RestContext;\n"]},"metadata":{},"sourceType":"module"}