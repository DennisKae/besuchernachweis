{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Table/index.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Toolbar, Typography, Paper, IconButton, Checkbox, Tooltip } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport useStyles, { useToolbarStyles } from './style';\n\nfunction formatValue(val) {\n  if (Array.isArray(val)) return val.join(', ');\n  return val;\n}\n\nvar EnhancedTable = function EnhancedTable(_ref) {\n  var rows = _ref.rows,\n      rowsPerPageOptions = _ref.rowsPerPageOptions,\n      count = _ref.count,\n      rowsPerPage = _ref.rowsPerPage,\n      page = _ref.page,\n      onChangePage = _ref.onChangePage,\n      onChangeRowsPerPage = _ref.onChangeRowsPerPage,\n      uniqueId = _ref.uniqueId;\n  if (rows.length === 0) return null;\n  var classes = useStyles();\n  var cells = Object.keys(rows[0]); // state\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selected = _React$useState2[0],\n      setSelected = _React$useState2[1];\n\n  var EnhancedTableHead = function EnhancedTableHead(_ref2) {\n    var cells = _ref2.cells,\n        numSelected = _ref2.numSelected,\n        rowCount = _ref2.rowCount,\n        onSelectAll = _ref2.onSelectAll;\n    return __jsx(TableHead, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, __jsx(TableRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, __jsx(TableCell, {\n      padding: \"checkbox\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, __jsx(Checkbox, {\n      indeterminate: numSelected > 0 && numSelected < rowCount,\n      checked: rowCount > 0 && numSelected === rowCount,\n      onChange: onSelectAll,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    })), cells.map(function (cell) {\n      return __jsx(TableCell, {\n        key: cell,\n        align: \"left\",\n        padding: \"default\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, cell);\n    })));\n  };\n\n  var EnhancedTableToolbar = function EnhancedTableToolbar(_ref3) {\n    var numSelected = _ref3.numSelected;\n    var classes = useToolbarStyles();\n    return __jsx(Toolbar, {\n      className: clsx(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, numSelected > 0 ? __jsx(Typography, {\n      className: classes.title,\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, numSelected, \" ausgew\\xE4hlt\") : __jsx(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Besuche\"), numSelected > 0 ? __jsx(Tooltip, {\n      title: \"L\\xF6schen\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, __jsx(IconButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, __jsx(DeleteIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }))) : __jsx(Tooltip, {\n      title: \"Filter Liste\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, __jsx(IconButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, __jsx(FilterListIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }))));\n  };\n\n  var EnhancedTableCell = function EnhancedTableCell(_ref4) {\n    var children = _ref4.children;\n    var classes = useStyles();\n    return __jsx(TableCell, {\n      className: classes.cell,\n      component: \"th\",\n      scope: \"row\",\n      padding: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, children);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, __jsx(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), __jsx(TableContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(EnhancedTableHead, {\n    cells: cells,\n    numSelected: selected.length,\n    rowCount: rowsPerPage,\n    onSelectAll: function onSelectAll() {\n      setSelected([]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), __jsx(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, rows.map(function (row, index) {\n    var keys = Object.keys(row);\n    var checked = selected.indexOf('id') !== -1;\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, __jsx(TableCell, {\n      padding: \"checkbox\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, __jsx(Checkbox, {\n      checked: checked,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    })), keys.map(function (k, index) {\n      // @ts-ignore\n      var value = formatValue(row[k]);\n      return __jsx(EnhancedTableCell, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }\n      }, value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: rowsPerPageOptions,\n    labelRowsPerPage: \"Datens\\xE4tze pro Seite\",\n    count: count,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    component: \"div\",\n    onChangePage: onChangePage,\n    onChangeRowsPerPage: onChangeRowsPerPage,\n    labelDisplayedRows: function labelDisplayedRows(_ref5) {\n      var from = _ref5.from,\n          to = _ref5.to,\n          count = _ref5.count;\n      return \"\".concat(from, \"-\").concat(to, \" von \").concat(count);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default EnhancedTable;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Table/index.tsx"],"names":["React","clsx","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Toolbar","Typography","Paper","IconButton","Checkbox","Tooltip","DeleteIcon","FilterListIcon","useStyles","useToolbarStyles","formatValue","val","Array","isArray","join","EnhancedTable","rows","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","uniqueId","length","classes","cells","Object","keys","useState","selected","setSelected","EnhancedTableHead","numSelected","rowCount","onSelectAll","map","cell","EnhancedTableToolbar","root","highlight","title","EnhancedTableCell","children","paper","table","row","index","checked","indexOf","k","value","from","to"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Toolbar,\n  Typography,\n  Paper,\n  IconButton,\n  Checkbox,\n  Tooltip,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport {\n  EnhancedTableHeadProps,\n  EnhancedTableProps,\n  EnhancedTableToolbarProps,\n} from '../../types';\nimport useStyles, { useToolbarStyles } from './style';\n\nfunction formatValue(val: string | number | Array<any>) {\n  if (Array.isArray(val)) return val.join(', ');\n  return val;\n}\n\nconst EnhancedTable: React.FunctionComponent<EnhancedTableProps> = ({\n  rows,\n  rowsPerPageOptions,\n  count,\n  rowsPerPage,\n  page,\n  onChangePage,\n  onChangeRowsPerPage,\n  uniqueId,\n}) => {\n  if (rows.length === 0) return null;\n  const classes = useStyles();\n  const cells = Object.keys(rows[0]);\n\n  // state\n  const [selected, setSelected] = React.useState<Array<string | number>>([]);\n\n  const EnhancedTableHead: React.FunctionComponent<EnhancedTableHeadProps> = ({\n    cells,\n    numSelected,\n    rowCount,\n    onSelectAll,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAll}\n            />\n          </TableCell>\n          {cells.map(cell => (\n            <TableCell key={cell} align=\"left\" padding=\"default\">\n              {cell}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  };\n\n  const EnhancedTableToolbar: React.FunctionComponent<EnhancedTableToolbarProps> = ({\n    numSelected,\n  }) => {\n    const classes = useToolbarStyles();\n    return (\n      <Toolbar\n        className={clsx(classes.root, {\n          [classes.highlight]: numSelected > 0,\n        })}\n      >\n        {numSelected > 0 ? (\n          <Typography\n            className={classes.title}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n          >\n            {numSelected} ausgewählt\n          </Typography>\n        ) : (\n          <Typography className={classes.title} variant=\"h6\">\n            Besuche\n          </Typography>\n        )}\n        {numSelected > 0 ? (\n          <Tooltip title=\"Löschen\">\n            <IconButton>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter Liste\">\n            <IconButton>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </Toolbar>\n    );\n  };\n\n  const EnhancedTableCell: React.FunctionComponent = ({ children }) => {\n    const classes = useStyles();\n    return (\n      <TableCell\n        className={classes.cell}\n        component=\"th\"\n        scope=\"row\"\n        padding=\"none\"\n      >\n        {children}\n      </TableCell>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table className={classes.table}>\n            <EnhancedTableHead\n              cells={cells}\n              numSelected={selected.length}\n              rowCount={rowsPerPage}\n              onSelectAll={() => {\n                setSelected([]);\n              }}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const keys = Object.keys(row);\n                const checked = selected.indexOf('id') !== -1;\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox checked={checked} />\n                    </TableCell>\n                    {keys.map((k, index) => {\n                      // @ts-ignore\n                      const value = formatValue(row[k]);\n                      return (\n                        <EnhancedTableCell key={index}>\n                          {value}\n                        </EnhancedTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          labelRowsPerPage=\"Datensätze pro Seite\"\n          count={count}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          component=\"div\"\n          onChangePage={onChangePage}\n          onChangeRowsPerPage={onChangeRowsPerPage}\n          labelDisplayedRows={({ from, to, count }) =>\n            `${from}-${to} von ${count}`\n          }\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default EnhancedTable;\n"]},"metadata":{},"sourceType":"module"}