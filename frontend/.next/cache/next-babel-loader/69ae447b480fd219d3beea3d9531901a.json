{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { Grid, Typography, ButtonGroup, Button, Paper, Input, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, ExpansionPanelActions, Divider, Fab, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport useTranslations from '../../hooks/useTranslations';\nimport Modal from '../Modal';\nimport Dialog from '../Dialog';\nimport useStyles from './style';\n\nvar ModalContent = function ModalContent(_ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      onSaveClick = _ref.onSaveClick,\n      onExitClick = _ref.onExitClick;\n  var classes = useStyles();\n\n  var _useTranslations = useTranslations(),\n      t = _useTranslations.t;\n\n  var _React$useState = React.useState(title),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  return __jsx(Paper, {\n    className: classes.paper\n  }, __jsx(Typography, {\n    variant: \"body1\"\n  }, t('add-description')), __jsx(Input, {\n    placeholder: t('description'),\n    className: classes.input,\n    value: value,\n    onChange: function onChange(event) {\n      return setValue(event.target.value);\n    },\n    style: {\n      marginTop: '24px',\n      marginBottom: '24px'\n    }\n  }), __jsx(Grid, {\n    container: true,\n    justify: \"space-between\"\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: value === title,\n    onClick: function onClick() {\n      return onSaveClick({\n        title: value,\n        id: id\n      });\n    }\n  }, t('save')), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onExitClick\n  }, t('cancle'))));\n};\n\nvar Property = function Property(_ref2) {\n  var properties = _ref2.properties,\n      onDelete = _ref2.onDelete,\n      onEdit = _ref2.onEdit,\n      onCreate = _ref2.onCreate;\n\n  var _React$useState3 = React.useState({\n    status: false,\n    type: null\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showCreateModal = _React$useState4[0],\n      setShowCreateModal = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      showEditModal = _React$useState6[0],\n      setShowEditModal = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      showDeleteDialog = _React$useState8[0],\n      setShowDeleteDialog = _React$useState8[1];\n\n  var _React$useState9 = React.useState(null),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      activeElement = _React$useState10[0],\n      setActiveElement = _React$useState10[1];\n\n  var classes = useStyles();\n\n  var _useTranslations2 = useTranslations(),\n      t = _useTranslations2.t;\n\n  var theme = useTheme();\n  var minMd = useMediaQuery(theme.breakpoints.up('md'));\n  return __jsx(React.Fragment, null, activeElement && __jsx(Dialog, {\n    open: showDeleteDialog,\n    onClose: function onClose() {\n      return setShowDeleteDialog(false);\n    },\n    title: activeElement.title,\n    content: t('are-you-sure-to-delete'),\n    onAgree: function onAgree() {\n      return onDelete({\n        id: activeElement.id\n      });\n    },\n    onDisagree: function onDisagree() {\n      return setShowDeleteDialog(false);\n    }\n  }), __jsx(Modal, {\n    open: showEditModal,\n    onClose: function onClose() {\n      return setShowEditModal(false);\n    }\n  }, activeElement && __jsx(ModalContent, {\n    id: activeElement.id,\n    title: activeElement.title,\n    onSaveClick: function onSaveClick(props) {\n      return onEdit(props);\n    },\n    onExitClick: function onExitClick() {\n      return setShowEditModal(false);\n    }\n  })), __jsx(Modal, {\n    open: showCreateModal.status,\n    onClose: function onClose() {\n      return setShowCreateModal({\n        status: false,\n        type: null\n      });\n    }\n  }, __jsx(ModalContent, {\n    id: \"\",\n    title: \"\",\n    onSaveClick: function onSaveClick(props) {\n      onCreate({\n        title: props.title\n      });\n    },\n    onExitClick: function onExitClick() {\n      return setShowCreateModal({\n        status: false,\n        type: null\n      });\n    }\n  })), __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 9,\n    sm: 6\n  }, __jsx(Typography, {\n    variant: \"body1\"\n  }, t('administration')), __jsx(Typography, {\n    variant: \"h6\"\n  }, t('property-properties-rooms'))), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    sm: 6,\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n  }, __jsx(Fab, {\n    variant: \"extended\",\n    color: \"secondary\",\n    onClick: function onClick() {\n      return setShowCreateModal({\n        status: true,\n        type: 'building'\n      });\n    }\n  }, __jsx(AddIcon, null), minMd && t('property-properties')))), __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, properties.map(function (property, index) {\n    return __jsx(ExpansionPanel, {\n      key: index\n    }, __jsx(ExpansionPanelSummary, {\n      expandIcon: __jsx(ExpandMoreIcon, null)\n    }, __jsx(Typography, {\n      variant: \"body1\"\n    }, property.title)), __jsx(Divider, null), __jsx(ExpansionPanelDetails, null, __jsx(Grid, {\n      container: true\n    }, property.rooms.map(function (room, index) {\n      return __jsx(Grid, {\n        container: true,\n        key: index,\n        className: clsx(classes.panelDetails, _defineProperty({}, classes.oddPanelDetail, !(index % 2)))\n      }, __jsx(Typography, {\n        key: index,\n        variant: \"body1\",\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          marginRight: 'auto',\n          fontWeight: 500\n        }\n      }, room.title), __jsx(Grid, {\n        item: true\n      }, __jsx(ButtonGroup, {\n        variant: \"outlined\",\n        color: \"secondary\"\n      }, __jsx(Button, {\n        onClick: function onClick() {\n          setShowEditModal(true);\n          setActiveElement(room);\n        }\n      }, t('edit')), __jsx(Button, null, t('delete')))));\n    }))), __jsx(Divider, null), __jsx(ExpansionPanelActions, null, __jsx(Fab, {\n      variant: \"extended\",\n      color: \"secondary\",\n      onClick: function onClick() {\n        return setShowCreateModal({\n          status: true,\n          type: 'room'\n        });\n      }\n    }, __jsx(AddIcon, null), minMd && t('property-rooms'))));\n  })))));\n};\n\nexport default Property;","map":null,"metadata":{},"sourceType":"module"}