{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { Grid, Typography, ButtonGroup, Button, Paper, Input, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, ExpansionPanelActions, Divider, Fab, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport useTranslations from '../../hooks/useTranslations';\nimport Modal from '../Modal';\nimport Dialog from '../Dialog';\nimport useStyles from './style';\n\nconst ModalContent = ({\n  id,\n  title,\n  onSaveClick,\n  onExitClick\n}) => {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslations();\n  const [value, setValue] = React.useState(title);\n  return __jsx(Paper, {\n    className: classes.paper\n  }, __jsx(Typography, {\n    variant: \"body1\"\n  }, t('add-description')), __jsx(Input, {\n    placeholder: t('description'),\n    className: classes.input,\n    value: value,\n    onChange: event => setValue(event.target.value),\n    style: {\n      marginTop: '24px',\n      marginBottom: '24px'\n    }\n  }), __jsx(Grid, {\n    container: true,\n    justify: \"space-between\"\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: value === title,\n    onClick: () => onSaveClick({\n      title: value,\n      id\n    })\n  }, t('save')), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onExitClick\n  }, t('cancle'))));\n};\n\nconst Property = ({\n  properties,\n  onDelete,\n  onEdit,\n  onCreate\n}) => {\n  const [showCreateModal, setShowCreateModal] = React.useState({\n    status: false,\n    type: null\n  });\n  const [showEditModal, setShowEditModal] = React.useState(false);\n  const [showDeleteDialog, setShowDeleteDialog] = React.useState(false);\n  const [activeElement, setActiveElement] = React.useState(null);\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslations();\n  const theme = useTheme();\n  const minMd = useMediaQuery(theme.breakpoints.up('md'));\n  return __jsx(React.Fragment, null, activeElement && __jsx(Dialog, {\n    open: showDeleteDialog,\n    onClose: () => setShowDeleteDialog(false),\n    title: activeElement.title,\n    content: t('are-you-sure-to-delete'),\n    onAgree: () => onDelete({\n      id: activeElement.id\n    }),\n    onDisagree: () => setShowDeleteDialog(false)\n  }), __jsx(Modal, {\n    open: showEditModal,\n    onClose: () => setShowEditModal(false)\n  }, activeElement && __jsx(ModalContent, {\n    id: activeElement.id,\n    title: activeElement.title,\n    onSaveClick: props => onEdit(props),\n    onExitClick: () => setShowEditModal(false)\n  })), __jsx(Modal, {\n    open: showCreateModal.status,\n    onClose: () => setShowCreateModal({\n      status: false,\n      type: null\n    })\n  }, __jsx(ModalContent, {\n    id: \"\",\n    title: \"\",\n    onSaveClick: props => {\n      onCreate({\n        title: props.title\n      });\n    },\n    onExitClick: () => setShowCreateModal({\n      status: false,\n      type: null\n    })\n  })), __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 9,\n    sm: 6\n  }, __jsx(Typography, {\n    variant: \"body1\"\n  }, t('administration')), __jsx(Typography, {\n    variant: \"h6\"\n  }, t('property-properties-rooms'))), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    sm: 6,\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    }\n  }, __jsx(Fab, {\n    variant: \"extended\",\n    color: \"secondary\",\n    onClick: () => setShowCreateModal({\n      status: true,\n      type: 'building'\n    })\n  }, __jsx(AddIcon, null), minMd && t('property-properties')))), __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, properties.map((property, index) => __jsx(ExpansionPanel, {\n    key: index\n  }, __jsx(ExpansionPanelSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, null)\n  }, __jsx(Typography, {\n    variant: \"body1\"\n  }, property.title)), __jsx(Divider, null), __jsx(ExpansionPanelDetails, null, __jsx(Grid, {\n    container: true\n  }, property.rooms.map((room, index) => __jsx(Grid, {\n    container: true,\n    key: index,\n    className: clsx(classes.panelDetails, {\n      [classes.oddPanelDetail]: !(index % 2)\n    })\n  }, __jsx(Typography, {\n    key: index,\n    variant: \"body1\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginRight: 'auto',\n      fontWeight: 500\n    }\n  }, room.title), __jsx(Grid, {\n    item: true\n  }, __jsx(ButtonGroup, {\n    variant: \"outlined\",\n    color: \"secondary\"\n  }, __jsx(Button, {\n    onClick: () => {\n      setShowEditModal(true);\n      setActiveElement(room);\n    }\n  }, t('edit')), __jsx(Button, null, t('delete')))))))), __jsx(Divider, null), __jsx(ExpansionPanelActions, null, __jsx(Fab, {\n    variant: \"extended\",\n    color: \"secondary\",\n    onClick: () => setShowCreateModal({\n      status: true,\n      type: 'room'\n    })\n  }, __jsx(AddIcon, null), minMd && t('property-rooms')))))))));\n};\n\nexport default Property;","map":null,"metadata":{},"sourceType":"module"}