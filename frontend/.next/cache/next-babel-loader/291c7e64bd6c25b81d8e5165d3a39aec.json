{"ast":null,"code":"var _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Table/index.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Toolbar, Typography, Paper, Button } from '@material-ui/core';\nimport useStyles, { useToolbarStyles } from './style';\n\nconst EnhancedTableHead = ({\n  cells\n}) => {\n  return __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, cells.map(cell => __jsx(TableCell, {\n    key: cell,\n    align: \"left\",\n    padding: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, cell))));\n};\n\nconst EnhancedTableToolbar = () => {\n  const classes = useToolbarStyles();\n  return __jsx(Toolbar, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Besuche\"));\n};\n\nconst EnhancedTableCell = ({\n  children\n}) => {\n  const classes = useStyles();\n  return __jsx(TableCell, {\n    className: classes.cell,\n    component: \"th\",\n    scope: \"row\",\n    padding: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nfunction formatValue(val) {\n  if (Array.isArray(val)) return val.concat(', ');\n  return val;\n}\n\nconst EnhancedTable = ({\n  rows,\n  rowsPerPageOptions,\n  count,\n  rowsPerPage,\n  page,\n  onChangePage,\n  onChangeRowsPerPage,\n  displayOnly,\n  onClickRow,\n  buttonLabel\n}) => {\n  if (rows.length === 0) return null;\n  const classes = useStyles();\n  const cells = Object.keys(rows[0]);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(EnhancedTableToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), __jsx(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, __jsx(EnhancedTableHead, {\n    cells: cells,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, rows.map((row, index) => {\n    const keys = Object.keys(row);\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, keys.map((k, index) => {\n      // @ts-ignore\n      const value = formatValue(row[k]);\n      console.log(keys);\n\n      if (keys.length - 1 === index && !displayOnly) {\n        return __jsx(EnhancedTableCell, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 27\n          }\n        }, __jsx(Button, {\n          variant: \"outlined\",\n          color: \"secondary\",\n          onClick: () => {\n            if (row['ID']) onClickRow(row['ID']);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }\n        }, buttonLabel));\n      }\n\n      return __jsx(EnhancedTableCell, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: rowsPerPageOptions,\n    labelRowsPerPage: \"Datens\\xE4tze pro Seite\",\n    count: count,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    component: \"div\",\n    onChangePage: onChangePage,\n    onChangeRowsPerPage: onChangeRowsPerPage,\n    labelDisplayedRows: ({\n      from,\n      to,\n      count\n    }) => `${from}-${to} von ${count}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default EnhancedTable;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Table/index.tsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Toolbar","Typography","Paper","Button","useStyles","useToolbarStyles","EnhancedTableHead","cells","map","cell","EnhancedTableToolbar","classes","root","title","EnhancedTableCell","children","formatValue","val","Array","isArray","concat","EnhancedTable","rows","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","displayOnly","onClickRow","buttonLabel","length","Object","keys","paper","table","row","index","k","value","console","log","from","to"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Toolbar,\n  Typography,\n  Paper,\n  Button,\n} from '@material-ui/core';\nimport { EnhancedTableHeadProps, EnhancedTableProps } from '../../types';\nimport useStyles, { useToolbarStyles } from './style';\n\nconst EnhancedTableHead: React.FunctionComponent<EnhancedTableHeadProps> = ({\n  cells,\n}) => {\n  return (\n    <TableHead>\n      <TableRow>\n        {cells.map(cell => (\n          <TableCell key={cell} align=\"left\" padding=\"default\">\n            {cell}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst EnhancedTableToolbar: React.FunctionComponent = () => {\n  const classes = useToolbarStyles();\n  return (\n    <Toolbar className={classes.root}>\n      <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n        Besuche\n      </Typography>\n    </Toolbar>\n  );\n};\n\nconst EnhancedTableCell: React.FunctionComponent = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <TableCell\n      className={classes.cell}\n      component=\"th\"\n      scope=\"row\"\n      padding=\"none\"\n    >\n      {children}\n    </TableCell>\n  );\n};\n\nfunction formatValue(val: string | number | Array<any>) {\n  if (Array.isArray(val)) return val.concat(', ');\n  return val;\n}\n\nconst EnhancedTable: React.FunctionComponent<EnhancedTableProps> = ({\n  rows,\n  rowsPerPageOptions,\n  count,\n  rowsPerPage,\n  page,\n  onChangePage,\n  onChangeRowsPerPage,\n  displayOnly,\n  onClickRow,\n  buttonLabel,\n}) => {\n  if (rows.length === 0) return null;\n  const classes = useStyles();\n  const cells = Object.keys(rows[0]);\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table className={classes.table}>\n            <EnhancedTableHead cells={cells} />\n            <TableBody>\n              {rows.map((row, index) => {\n                const keys = Object.keys(row);\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                    {keys.map((k, index) => {\n                      // @ts-ignore\n                      const value = formatValue(row[k]);\n                      console.log(keys);\n                      if (keys.length - 1 === index && !displayOnly) {\n                        return (\n                          <EnhancedTableCell key={index}>\n                            <Button\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              onClick={() => {\n                                if (row['ID']) onClickRow(row['ID']);\n                              }}\n                            >\n                              {buttonLabel}\n                            </Button>\n                          </EnhancedTableCell>\n                        );\n                      }\n\n                      return (\n                        <EnhancedTableCell key={index}>\n                          {value}\n                        </EnhancedTableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          labelRowsPerPage=\"Datensätze pro Seite\"\n          count={count}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          component=\"div\"\n          onChangePage={onChangePage}\n          onChangeRowsPerPage={onChangeRowsPerPage}\n          labelDisplayedRows={({ from, to, count }) =>\n            `${from}-${to} von ${count}`\n          }\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default EnhancedTable;\n"]},"metadata":{},"sourceType":"module"}