{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from 'isomorphic-unfetch';\n\nfunction fetcher(baseURL) {\n  async function fetchRessource(url, fetchOptions) {\n    const u = `${baseURL}${url}`;\n\n    try {\n      const xhr = await fetch(u, fetchOptions);\n      if (xhr.ok) return xhr.json();\n      throw new Error(`Unexpected error during fetch of URL ${u}: ${JSON.stringify(xhr)}`);\n    } catch (error) {\n      throw new Error(`Unexpected error during fetch of URL ${u}: ${error}`);\n    }\n  }\n\n  return fetchRessource;\n}\n\nexport default class RestClient {\n  constructor(url) {\n    _defineProperty(this, \"fetcher\", void 0);\n\n    this.fetcher = fetcher(url);\n  }\n\n  async login(props) {\n    return this.fetcher(`Auth/Login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(props)\n    });\n  }\n\n  async register(props) {\n    return this.fetcher(`Auth/Register`, {\n      method: 'POST',\n      hedaders: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(props)\n    });\n  }\n\n  async postBesuch(props) {\n    return this.fetcher(`Besuch`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(props)\n    });\n  }\n\n  async setBesuchEndzeitpunkt(input) {\n    return this.fetcher(`Besuch/SetEndzeitpunkt`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/jsoon'\n      },\n      body: JSON.stringify(input)\n    });\n  }\n\n  async getBesuchByFilter(input) {\n    return this.fetcher(`Besuch/GetByFilter`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(input)\n    });\n  }\n\n  async postBesucher(props) {\n    return this.fetcher(`Besucher`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(props)\n    });\n  }\n\n  async getGebauede() {\n    return this.fetcher(`Gebaeude`, {\n      method: 'GET'\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/rest-client/index.tsx"],"names":["fetch","fetcher","baseURL","fetchRessource","url","fetchOptions","u","xhr","ok","json","Error","JSON","stringify","error","RestClient","constructor","login","props","method","headers","body","register","hedaders","postBesuch","setBesuchEndzeitpunkt","input","getBesuchByFilter","postBesucher","getGebauede"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport {\n  GetBesucherByFilterInput,\n  GetBesucherByFilterResponse,\n  SetBesuchEndzeitpunktInput,\n} from '../types';\n\nfunction fetcher(baseURL: string) {\n  async function fetchRessource(\n    url: string,\n    fetchOptions?: object\n  ): Promise<any> {\n    const u = `${baseURL}${url}`;\n    try {\n      const xhr = await fetch(u, fetchOptions);\n      if (xhr.ok) return xhr.json();\n      throw new Error(\n        `Unexpected error during fetch of URL ${u}: ${JSON.stringify(xhr)}`\n      );\n    } catch (error) {\n      throw new Error(`Unexpected error during fetch of URL ${u}: ${error}`);\n    }\n  }\n  return fetchRessource;\n}\n\nexport default class RestClient {\n  fetcher: (url: string, options?: any) => Promise<any>;\n  constructor(url: string) {\n    this.fetcher = fetcher(url);\n  }\n  async login(props: { email: string; password: string }) {\n    return this.fetcher(`Auth/Login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async register(props: {\n    sicherheitsfrage: string;\n    rolle: string;\n    person: { name: string; vorname: string; email: string; telefon: string };\n  }) {\n    return this.fetcher(`Auth/Register`, {\n      method: 'POST',\n      hedaders: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async postBesuch(props: { besucher: Array<number>; raeume: Array<number> }) {\n    return this.fetcher(`Besuch`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async setBesuchEndzeitpunkt(input: SetBesuchEndzeitpunktInput) {\n    return this.fetcher(`Besuch/SetEndzeitpunkt`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/jsoon',\n      },\n      body: JSON.stringify(input),\n    });\n  }\n  async getBesuchByFilter(\n    input: GetBesucherByFilterInput\n  ): Promise<GetBesucherByFilterResponse> {\n    return this.fetcher(`Besuch/GetByFilter`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(input),\n    });\n  }\n  async postBesucher(props: {\n    person: { name: string; vorname: string; email: string; telefon: string };\n    gesundheitsstatus: string;\n  }) {\n    return this.fetcher(`Besucher`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async getGebauede() {\n    return this.fetcher(`Gebaeude`, {\n      method: 'GET',\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}