{"ast":null,"code":"var _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/CancleVisit/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Grid, Typography, TextField, Input, Button, Card } from '@material-ui/core';\nimport useVisitorSearchReducer from '../../hooks/useVisitorSearchReducer';\nimport useTranslations from '../../hooks/useTranslations';\nimport Table from '../Table';\nimport StatsCard from '../StatsCard';\nimport useStyles from './style';\n\nconst Dashboard = () => {\n  const reducer = useVisitorSearchReducer();\n  if (!reducer) return null;\n  const {\n    state: {\n      skip,\n      limit,\n      count,\n      page,\n      rows,\n      search\n    },\n    dispatch\n  } = reducer;\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslations();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    \"translation-id\": \"administraton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, t('administration')), __jsx(Typography, {\n    variant: \"h6\",\n    \"translation-id\": \"visitor-cancle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, t('visitor-cancle'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    style: {\n      paddingRight: '12px'\n    },\n    label: t('search-start-date'),\n    type: \"datetime-local\",\n    defaultValue: search.startDate,\n    onChange: event => dispatch({\n      type: 'setSearch',\n      payload: _objectSpread({}, search, {\n        startDate: event.target.value\n      })\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), __jsx(TextField, {\n    label: t('search-end-date'),\n    type: \"datetime-local\",\n    defaultValue: search.endDate,\n    onChange: event => {\n      dispatch({\n        type: 'setSearch',\n        payload: _objectSpread({}, search, {\n          endDate: event.target.value\n        })\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(StatsCard, {\n    title: t('visitor-count-for-period'),\n    value: \"200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(StatsCard, {\n    title: t('visitor-count-current-registered'),\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, __jsx(Input, {\n    placeholder: t('search-name'),\n    style: {\n      width: '100%'\n    },\n    value: search.firstName,\n    onChange: event => dispatch({\n      type: 'setSearch',\n      payload: _objectSpread({}, search, {\n        firstName: event.target.value\n      })\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), __jsx(Input, {\n    placeholder: t('search-first-name'),\n    style: {\n      width: '100%'\n    },\n    value: search.name,\n    onChange: event => dispatch({\n      type: 'setSearch',\n      payload: _objectSpread({}, search, {\n        name: event.target.value\n      })\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, t('search-apply'))))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    rows: rows,\n    rowsPerPageOptions: [25, 50, 100],\n    count: count,\n    rowsPerPage: limit,\n    page: page,\n    onChangePage: (_, newPage) => {\n      const newSkip = newPage > page ? skip + limit : skip - limit;\n      dispatch({\n        type: 'changePage',\n        payload: {\n          skip: newSkip,\n          page: newPage\n        }\n      });\n    },\n    onChangeRowsPerPage: event => {\n      const limit = Number(event.target.value);\n      dispatch({\n        type: 'changeRowsPerPage',\n        payload: {\n          limit\n        }\n      });\n    },\n    displayOnly: false,\n    onClickRow: val => console.log(val),\n    buttonLabel: \"Abmelden\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/CancleVisit/index.tsx"],"names":["React","Grid","Typography","TextField","Input","Button","Card","useVisitorSearchReducer","useTranslations","Table","StatsCard","useStyles","Dashboard","reducer","state","skip","limit","count","page","rows","search","dispatch","classes","t","root","paddingRight","startDate","event","type","payload","target","value","endDate","width","firstName","marginTop","name","_","newPage","newSkip","Number","val","console","log"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n  TextField,\n  Input,\n  Button,\n  Card,\n  CardContent,\n} from '@material-ui/core';\nimport useVisitorSearchReducer from '../../hooks/useVisitorSearchReducer';\nimport useTranslations from '../../hooks/useTranslations';\nimport Table from '../Table';\nimport StatsCard from '../StatsCard';\nimport useStyles from './style';\n\nconst Dashboard: React.FunctionComponent = () => {\n  const reducer = useVisitorSearchReducer();\n  if (!reducer) return null;\n\n  const {\n    state: { skip, limit, count, page, rows, search },\n    dispatch,\n  } = reducer;\n  const classes = useStyles();\n  const { t } = useTranslations();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"body1\" translation-id=\"administraton\">\n            {t('administration')}\n          </Typography>\n          <Typography variant=\"h6\" translation-id=\"visitor-cancle\">\n            {t('visitor-cancle')}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Grid container justify=\"flex-start\">\n            <TextField\n              style={{ paddingRight: '12px' }}\n              label={t('search-start-date')}\n              type=\"datetime-local\"\n              defaultValue={search.startDate}\n              onChange={event =>\n                dispatch({\n                  type: 'setSearch',\n                  payload: { ...search, startDate: event.target.value },\n                })\n              }\n            />\n            <TextField\n              label={t('search-end-date')}\n              type=\"datetime-local\"\n              defaultValue={search.endDate}\n              onChange={event => {\n                dispatch({\n                  type: 'setSearch',\n                  payload: { ...search, endDate: event.target.value },\n                });\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6} lg={3} xl={3}>\n          <StatsCard title={t('visitor-count-for-period')} value=\"200\" />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={3} xl={3}>\n          <StatsCard title={t('visitor-count-current-registered')} value=\"3\" />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={3} xl={3} alignItems=\"center\">\n          <Card>\n            <Input\n              placeholder={t('search-name')}\n              style={{\n                width: '100%',\n              }}\n              value={search.firstName}\n              onChange={event =>\n                dispatch({\n                  type: 'setSearch',\n                  payload: { ...search, firstName: event.target.value },\n                })\n              }\n            />\n            <div style={{ marginTop: '8px' }} />\n            <Input\n              placeholder={t('search-first-name')}\n              style={{\n                width: '100%',\n              }}\n              value={search.name}\n              onChange={event =>\n                dispatch({\n                  type: 'setSearch',\n                  payload: { ...search, name: event.target.value },\n                })\n              }\n            />\n            <div style={{ marginTop: '8px' }} />\n            <Button variant=\"contained\" color=\"primary\">\n              {t('search-apply')}\n            </Button>\n          </Card>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Table\n            rows={rows}\n            rowsPerPageOptions={[25, 50, 100]}\n            count={count}\n            rowsPerPage={limit}\n            page={page}\n            onChangePage={(_: any, newPage: number) => {\n              const newSkip = newPage > page ? skip + limit : skip - limit;\n              dispatch({\n                type: 'changePage',\n                payload: { skip: newSkip, page: newPage },\n              });\n            }}\n            onChangeRowsPerPage={event => {\n              const limit = Number(event.target.value);\n              dispatch({ type: 'changeRowsPerPage', payload: { limit } });\n            }}\n            displayOnly={false}\n            onClickRow={val => console.log(val)}\n            buttonLabel=\"Abmelden\"\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}