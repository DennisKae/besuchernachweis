{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Table/index.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Toolbar, Typography, Paper, Button } from '@material-ui/core';\nimport useStyles, { useToolbarStyles } from './style';\nvar cells = [{\n  id: 'ID',\n  key: 'id'\n}, {\n  id: 'Beginn',\n  key: 'startDate'\n}, {\n  id: 'Ende',\n  key: 'endDate'\n}, {\n  id: 'Name',\n  key: 'name'\n}, {\n  id: 'Vorname',\n  key: 'firstName'\n}, {\n  id: 'E-Mail',\n  key: 'email'\n}, {\n  id: 'RÃ¤ume',\n  key: 'rooms'\n}, {\n  id: '',\n  key: 'action'\n}];\nvar cellKeys = cells.map(function (cell) {\n  return cell.key;\n});\n\nvar EnhancedTableHead = function EnhancedTableHead() {\n  return __jsx(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, __jsx(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, cells.map(function (cell) {\n    return __jsx(TableCell, {\n      key: cell.id,\n      align: \"left\",\n      padding: \"default\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, cell.id);\n  })));\n};\n\nvar EnhancedTableToolbar = function EnhancedTableToolbar() {\n  var classes = useToolbarStyles();\n  return __jsx(Toolbar, {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Besuche\"));\n};\n\nvar EnhancedTableCell = function EnhancedTableCell(_ref) {\n  var children = _ref.children;\n  var classes = useStyles();\n  return __jsx(TableCell, {\n    className: classes.cell,\n    component: \"th\",\n    scope: \"row\",\n    padding: \"none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nvar EnhancedTable = function EnhancedTable(_ref2) {\n  var rows = _ref2.rows,\n      rowsPerPageOptions = _ref2.rowsPerPageOptions,\n      count = _ref2.count,\n      rowsPerPage = _ref2.rowsPerPage,\n      page = _ref2.page,\n      onChangePage = _ref2.onChangePage,\n      onChangeRowsPerPage = _ref2.onChangeRowsPerPage;\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, __jsx(EnhancedTableToolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), __jsx(TableContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, __jsx(EnhancedTableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), __jsx(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, rows.map(function (row) {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, cellKeys.map(function (k, index) {\n      if (k === 'rooms') return __jsx(EnhancedTableCell, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 27\n        }\n      }, // @ts-ignore\n      row[k].concat(', '));else if (k === 'action') return __jsx(EnhancedTableCell, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 27\n        }\n      }, __jsx(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, \"Abmelden\"));else return __jsx(EnhancedTableCell, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 27\n        }\n      }, // @ts-ignore\n      row[k]);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: rowsPerPageOptions,\n    labelRowsPerPage: \"Besuche pro Seite\",\n    count: count,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    component: \"div\",\n    onChangePage: onChangePage,\n    onChangeRowsPerPage: onChangeRowsPerPage,\n    labelDisplayedRows: function labelDisplayedRows(_ref3) {\n      var from = _ref3.from,\n          to = _ref3.to,\n          count = _ref3.count;\n      return \"\".concat(from, \"-\").concat(to, \" von \").concat(count);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default EnhancedTable;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Table/index.tsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Toolbar","Typography","Paper","Button","useStyles","useToolbarStyles","cells","id","key","cellKeys","map","cell","EnhancedTableHead","EnhancedTableToolbar","classes","root","title","EnhancedTableCell","children","EnhancedTable","rows","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","paper","table","row","k","index","concat","from","to"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Toolbar,\n  Typography,\n  Paper,\n  Button,\n} from '@material-ui/core';\nimport { VisitorTableRowProps, EnhancedTableProps } from '../../types';\nimport useStyles, { useToolbarStyles } from './style';\n\nconst cells: Array<Pick<VisitorTableRowProps, 'id'> & {\n  key: string | null;\n}> = [\n  {\n    id: 'ID',\n    key: 'id',\n  },\n  {\n    id: 'Beginn',\n    key: 'startDate',\n  },\n  {\n    id: 'Ende',\n    key: 'endDate',\n  },\n  {\n    id: 'Name',\n    key: 'name',\n  },\n  {\n    id: 'Vorname',\n    key: 'firstName',\n  },\n  {\n    id: 'E-Mail',\n    key: 'email',\n  },\n  {\n    id: 'RÃ¤ume',\n    key: 'rooms',\n  },\n  {\n    id: '',\n    key: 'action',\n  },\n];\n\nconst cellKeys = cells.map(cell => cell.key);\n\nconst EnhancedTableHead: React.FunctionComponent = () => {\n  return (\n    <TableHead>\n      <TableRow>\n        {cells.map(cell => (\n          <TableCell key={cell.id} align=\"left\" padding=\"default\">\n            {cell.id}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n};\n\nconst EnhancedTableToolbar: React.FunctionComponent = () => {\n  const classes = useToolbarStyles();\n  return (\n    <Toolbar className={classes.root}>\n      <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n        Besuche\n      </Typography>\n    </Toolbar>\n  );\n};\n\nconst EnhancedTableCell: React.FunctionComponent = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <TableCell\n      className={classes.cell}\n      component=\"th\"\n      scope=\"row\"\n      padding=\"none\"\n    >\n      {children}\n    </TableCell>\n  );\n};\n\nconst EnhancedTable: React.FunctionComponent<EnhancedTableProps> = ({\n  rows,\n  rowsPerPageOptions,\n  count,\n  rowsPerPage,\n  page,\n  onChangePage,\n  onChangeRowsPerPage,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table className={classes.table}>\n            <EnhancedTableHead />\n            <TableBody>\n              {rows.map(row => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.id}>\n                    {cellKeys.map((k, index) => {\n                      if (k === 'rooms')\n                        return (\n                          <EnhancedTableCell key={index}>\n                            {// @ts-ignore\n                            row[k].concat(', ')}\n                          </EnhancedTableCell>\n                        );\n                      else if (k === 'action')\n                        return (\n                          <EnhancedTableCell key={index}>\n                            <Button variant=\"outlined\" color=\"secondary\">\n                              Abmelden\n                            </Button>\n                          </EnhancedTableCell>\n                        );\n                      else\n                        return (\n                          <EnhancedTableCell key={index}>\n                            {\n                              // @ts-ignore\n                              row[k]\n                            }\n                          </EnhancedTableCell>\n                        );\n                    })}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          labelRowsPerPage=\"Besuche pro Seite\"\n          count={count}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          component=\"div\"\n          onChangePage={onChangePage}\n          onChangeRowsPerPage={onChangeRowsPerPage}\n          labelDisplayedRows={({ from, to, count }) =>\n            `${from}-${to} von ${count}`\n          }\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default EnhancedTable;\n"]},"metadata":{},"sourceType":"module"}