{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/pages/[locale]/visitor/register.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport useRestClient from '../../../hooks/useRestClient';\nimport Register from '../../../components/RegisterVisit';\n\nvar Visitors = function Visitors() {\n  var _useRestClient = useRestClient(),\n      client = _useRestClient.client,\n      setIsLoading = _useRestClient.setIsLoading,\n      setHasError = _useRestClient.setHasError;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      gebaeude = _React$useState2[0],\n      setGebaeude = _React$useState2[1];\n\n  React.useEffect(function () {\n    function getGebaude() {\n      var res;\n      return _regeneratorRuntime.async(function getGebaude$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!client) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(client.getGebauede());\n\n            case 3:\n              res = _context.sent;\n              if (res) setGebaeude(res);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, []);\n  return __jsx(Register, {\n    createNewVisitor: function _callee(props) {\n      var res;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!client) {\n                _context2.next = 16;\n                break;\n              }\n\n              setIsLoading(true);\n              _context2.prev = 2;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(client.postBesucher({\n                person: {\n                  name: props.name,\n                  vorname: props.firstName,\n                  email: props.email,\n                  telefon: props.phone\n                },\n                gesundheitsstatus: 'gesund'\n              }));\n\n            case 5:\n              res = _context2.sent;\n\n              if (!(res && res.id)) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(client.postBesuch({\n                besucher: [res.id],\n                raeume: props.rooms\n              }));\n\n            case 9:\n              setIsLoading(false);\n              _context2.next = 16;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log('here');\n              setHasError(true);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[2, 12]], Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default Visitors;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/pages/[locale]/visitor/register.tsx"],"names":["React","useRestClient","Register","Visitors","client","setIsLoading","setHasError","useState","gebaeude","setGebaeude","useEffect","getGebaude","getGebauede","res","props","postBesucher","person","name","vorname","firstName","email","telefon","phone","gesundheitsstatus","id","postBesuch","besucher","raeume","rooms","console","log"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,QAAP,MAAqB,mCAArB;;AAEA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,GAAM;AAAA,uBACAF,aAAa,EADb;AAAA,MACtCG,MADsC,kBACtCA,MADsC;AAAA,MAC9BC,YAD8B,kBAC9BA,YAD8B;AAAA,MAChBC,WADgB,kBAChBA,WADgB;;AAAA,wBAEdN,KAAK,CAACO,QAAN,CAAe,IAAf,CAFc;AAAA;AAAA,MAEvCC,QAFuC;AAAA,MAE7BC,WAF6B;;AAG9CT,EAAAA,KAAK,CAACU,SAAN,CAAgB,YAAM;AACpB,aAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMP,MADN;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAEsBA,MAAM,CAACQ,WAAP,EAFtB;;AAAA;AAEUC,cAAAA,GAFV;AAGI,kBAAIA,GAAJ,EAASJ,WAAW,CAACI,GAAD,CAAX;;AAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,GAPD,EAOG,EAPH;AAQA,SACE,MAAC,QAAD;AACE,IAAA,gBAAgB,EAAE,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZV,MADY;AAAA;AAAA;AAAA;;AAEdC,cAAAA,YAAY,CAAC,IAAD,CAAZ;AAFc;AAAA;AAAA,+CAIMD,MAAM,CAACW,YAAP,CAAoB;AACpCC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,IAAI,EAAEH,KAAK,CAACG,IADN;AAENC,kBAAAA,OAAO,EAAEJ,KAAK,CAACK,SAFT;AAGNC,kBAAAA,KAAK,EAAEN,KAAK,CAACM,KAHP;AAINC,kBAAAA,OAAO,EAAEP,KAAK,CAACQ;AAJT,iBAD4B;AAOpCC,gBAAAA,iBAAiB,EAAE;AAPiB,eAApB,CAJN;;AAAA;AAINV,cAAAA,GAJM;;AAAA,oBAaRA,GAAG,IAAIA,GAAG,CAACW,EAbH;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAcJpB,MAAM,CAACqB,UAAP,CAAkB;AACtBC,gBAAAA,QAAQ,EAAE,CAACb,GAAG,CAACW,EAAL,CADY;AAEtBG,gBAAAA,MAAM,EAAEb,KAAK,CAACc;AAFQ,eAAlB,CAdI;;AAAA;AAmBZvB,cAAAA,YAAY,CAAC,KAAD,CAAZ;AAnBY;AAAA;;AAAA;AAAA;AAAA;AAqBZwB,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAxB,cAAAA,WAAW,CAAC,IAAD,CAAX;;AAtBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA8BD,CAzCD;;AA2CA,eAAeH,QAAf","sourcesContent":["import * as React from 'react';\n\nimport useRestClient from '../../../hooks/useRestClient';\nimport Register from '../../../components/RegisterVisit';\n\nconst Visitors: React.FunctionComponent = () => {\n  const { client, setIsLoading, setHasError } = useRestClient();\n  const [gebaeude, setGebaeude] = React.useState(null);\n  React.useEffect(() => {\n    async function getGebaude() {\n      if (client) {\n        const res = await client.getGebauede();\n        if (res) setGebaeude(res);\n      }\n    }\n  }, []);\n  return (\n    <Register\n      createNewVisitor={async props => {\n        if (client) {\n          setIsLoading(true);\n          try {\n            const res = await client.postBesucher({\n              person: {\n                name: props.name,\n                vorname: props.firstName,\n                email: props.email,\n                telefon: props.phone,\n              },\n              gesundheitsstatus: 'gesund',\n            });\n            if (res && res.id) {\n              await client.postBesuch({\n                besucher: [res.id],\n                raeume: props.rooms,\n              });\n            }\n            setIsLoading(false);\n          } catch (error) {\n            console.log('here');\n            setHasError(true);\n          }\n        }\n      }}\n    />\n  );\n};\n\nexport default Visitors;\n"]},"metadata":{},"sourceType":"module"}