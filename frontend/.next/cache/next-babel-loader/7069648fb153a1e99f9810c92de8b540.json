{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\n\nvar createTableReducer = function createTableReducer() {\n  return function (state, action) {\n    switch (action.type) {\n      case 'setRows':\n        {\n          if (action.payload.count) return _objectSpread({}, state, {\n            rows: action.payload.rows,\n            count: action.payload.count\n          });else return _objectSpread({}, state, {\n            rows: action.payload.rows\n          });\n        }\n\n      case 'changePage':\n        return _objectSpread({}, state, {\n          page: action.payload.page,\n          skip: action.payload.skip\n        });\n\n      case 'changeRowsPerPage':\n        return _objectSpread({}, state, {\n          limit: action.payload.limit\n        });\n\n      case 'setSearch':\n        {\n          return _objectSpread({}, state, {\n            search: action.payload\n          });\n        }\n\n      default:\n        return state;\n    }\n  };\n};\n\nvar DEFAULT_STATE = {\n  skip: 0,\n  limit: 50,\n  count: 0,\n  page: 0\n};\n\nfunction useSearchStateReducer() {\n  var tableReducer = createTableReducer();\n\n  var _React$useReducer = React.useReducer(tableReducer, // @ts-ignore\n  DEFAULT_STATE),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  return {\n    state: state,\n    dispatch: dispatch\n  };\n}\n\nexport default useSearchStateReducer;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/hooks/useVisitorSearchReducer.tsx"],"names":["React","createTableReducer","state","action","type","payload","count","rows","page","skip","limit","search","DEFAULT_STATE","useSearchStateReducer","tableReducer","useReducer","dispatch"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAY,UAACC,KAAD,EAAWC,MAAX,EAAsC;AAC3E,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,SAAL;AAAgB;AACd,cAAID,MAAM,CAACE,OAAP,CAAeC,KAAnB,EACE,yBACKJ,KADL;AAEEK,YAAAA,IAAI,EAAEJ,MAAM,CAACE,OAAP,CAAeE,IAFvB;AAGED,YAAAA,KAAK,EAAEH,MAAM,CAACE,OAAP,CAAeC;AAHxB,aADF,KAMK,yBAAYJ,KAAZ;AAAmBK,YAAAA,IAAI,EAAEJ,MAAM,CAACE,OAAP,CAAeE;AAAxC;AACN;;AACD,WAAK,YAAL;AACE,iCAAYL,KAAZ;AAAmBM,UAAAA,IAAI,EAAEL,MAAM,CAACE,OAAP,CAAeG,IAAxC;AAA8CC,UAAAA,IAAI,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAAnE;;AACF,WAAK,mBAAL;AACE,iCAAYP,KAAZ;AAAmBQ,UAAAA,KAAK,EAAEP,MAAM,CAACE,OAAP,CAAeK;AAAzC;;AACF,WAAK,WAAL;AAAkB;AAChB,mCAAYR,KAAZ;AAAmBS,YAAAA,MAAM,EAAER,MAAM,CAACE;AAAlC;AACD;;AAED;AACE,eAAOH,KAAP;AAnBJ;AAqBD,GAtB0B;AAAA,CAA3B;;AAwBA,IAAMU,aAAyB,GAAG;AAChCH,EAAAA,IAAI,EAAE,CAD0B;AAEhCC,EAAAA,KAAK,EAAE,EAFyB;AAGhCJ,EAAAA,KAAK,EAAE,CAHyB;AAIhCE,EAAAA,IAAI,EAAE;AAJ0B,CAAlC;;AAOA,SAASK,qBAAT,GAAuC;AACrC,MAAMC,YAAY,GAAGb,kBAAkB,EAAvC;;AADqC,0BAEXD,KAAK,CAACe,UAAN,CACxBD,YADwB,EAExB;AACAF,EAAAA,aAHwB,CAFW;AAAA;AAAA,MAE9BV,KAF8B;AAAA,MAEvBc,QAFuB;;AAQrC,SAAO;AAAEd,IAAAA,KAAK,EAALA,KAAF;AAASc,IAAAA,QAAQ,EAARA;AAAT,GAAP;AACD;;AAED,eAAeH,qBAAf","sourcesContent":["import * as React from 'react';\nimport { TableState, TableAction } from '../types';\n\nconst createTableReducer = <S, R>() => (state: S, action: TableAction<R>) => {\n  switch (action.type) {\n    case 'setRows': {\n      if (action.payload.count)\n        return {\n          ...state,\n          rows: action.payload.rows,\n          count: action.payload.count,\n        };\n      else return { ...state, rows: action.payload.rows };\n    }\n    case 'changePage':\n      return { ...state, page: action.payload.page, skip: action.payload.skip };\n    case 'changeRowsPerPage':\n      return { ...state, limit: action.payload.limit };\n    case 'setSearch': {\n      return { ...state, search: action.payload };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst DEFAULT_STATE: TableState = {\n  skip: 0,\n  limit: 50,\n  count: 0,\n  page: 0,\n};\n\nfunction useSearchStateReducer<S, R>() {\n  const tableReducer = createTableReducer<S, R>();\n  const [state, dispatch] = React.useReducer(\n    tableReducer,\n    // @ts-ignore\n    DEFAULT_STATE\n  );\n\n  return { state, dispatch };\n}\n\nexport default useSearchStateReducer;\n"]},"metadata":{},"sourceType":"module"}