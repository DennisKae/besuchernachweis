{"ast":null,"code":"var _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/RegisterVisit/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Grid, Typography, Paper, Input, InputLabel, FormControl, Select, MenuItem, Button } from '@material-ui/core';\nimport SelectIcon from '@material-ui/icons/SelectAll';\nimport Table from '../Table';\nimport useRestClient from '../../hooks/useRestClient';\nimport useTableSearch from '../../hooks/useTableSearch';\nimport useTranslations from '../../hooks/useTranslations';\nimport useStyles from './style';\nconst INITIAL_FORM_STATE = {\n  firstName: '',\n  name: '',\n  email: '',\n  phone: '',\n  building: 0,\n  rooms: [],\n  permissionGranted: false\n};\n\nconst CreateNewUser = ({\n  onRegister,\n  buildings\n}) => {\n  const {\n    t\n  } = useTranslations();\n  const classes = useStyles();\n  const [formState, setFormState] = React.useState(INITIAL_FORM_STATE);\n  const [rooms, setRooms] = React.useState(null);\n  return __jsx(Paper, {\n    className: classes.contentContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-first-name'),\n    value: formState.firstName,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      firstName: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-name'),\n    value: formState.name,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      name: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    type: \"email\",\n    placeholder: t('register-email'),\n    value: formState.email,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      email: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-phone'),\n    value: formState.phone,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      phone: event.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Geb\\xE4ude\"), __jsx(Select, {\n    value: formState.building,\n    onChange: event => {\n      setFormState(_objectSpread({}, formState, {\n        building: event.target.value\n      }));\n      const rooms = buildings.filter(b => b.id === event.target.value).map(v => v.raeume);\n      if (rooms) setRooms(rooms[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, buildings && buildings.length > 0 && buildings.map((building, index) => __jsx(MenuItem, {\n    key: index,\n    value: building.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, building.bezeichnung))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, __jsx(FormControl, {\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, __jsx(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, t('property-rooms')), rooms && rooms.length > 0 && __jsx(Select, {\n    value: formState.rooms,\n    onChange: event => {\n      setFormState(_objectSpread({}, formState, {\n        rooms: event.target.value\n      }));\n    },\n    multiple: true,\n    input: __jsx(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 24\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, rooms.map((room, index) => {\n    return __jsx(MenuItem, {\n      key: index,\n      value: room.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, room.bezeichnung);\n  }))))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => {\n      onRegister(formState);\n      setFormState(INITIAL_FORM_STATE);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, t('register')))));\n};\n\nconst RegisterVisit = () => {\n  // hooks\n  const classes = useStyles();\n  const reducer = useTableSearch();\n  const {\n    t\n  } = useTranslations();\n  const {\n    client\n  } = useRestClient();\n  if (!reducer) return null;\n  const {\n    state,\n    dispatch\n  } = reducer;\n\n  async function getBesucherByFilter() {\n    const res = await client.getBesucherByFilter({\n      skip: state.skip,\n      take: state.limit\n    });\n    if (res) dispatch({\n      type: 'setRows',\n      payload: {\n        rows: res.map(r => ({\n          id: r.id,\n          vorname: 'Max',\n          nachname: 'Mustermann',\n          email: 'max@mustermann.de'\n        })),\n        count: res.length\n      }\n    });\n  }\n\n  React.useEffect(() => {\n    getBesucherByFilter();\n  }, []);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, t('administration')), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, t('visitor-register'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, \"Registrieter Besucher\"), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, \"Besucher ausw\\xE4hlen\"))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, __jsx(CreateNewUser, {\n    onRegister: () => {},\n    buildings: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    rows: state.rows,\n    rowsPerPageOptions: [25, 50, 100],\n    count: state.count,\n    rowsPerPage: state.limit,\n    page: state.page,\n    onChangePage: () => {},\n    onChangeRowsPerPage: () => {},\n    uniqueId: \"id\",\n    toolbarSettings: {\n      title: 'Besucher',\n      tooltipSelected: {\n        title: 'Besucher auswählen',\n        icon: __jsx(SelectIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 23\n          }\n        }),\n        onClick: () => {}\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default RegisterVisit;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/RegisterVisit/index.tsx"],"names":["React","Grid","Typography","Paper","Input","InputLabel","FormControl","Select","MenuItem","Button","SelectIcon","Table","useRestClient","useTableSearch","useTranslations","useStyles","INITIAL_FORM_STATE","firstName","name","email","phone","building","rooms","permissionGranted","CreateNewUser","onRegister","buildings","t","classes","formState","setFormState","useState","setRooms","contentContainer","input","event","target","value","width","filter","b","id","map","v","raeume","length","index","bezeichnung","room","RegisterVisit","reducer","client","state","dispatch","getBesucherByFilter","res","skip","take","limit","type","payload","rows","r","vorname","nachname","count","useEffect","root","page","title","tooltipSelected","icon","onClick"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n  Paper,\n  Input,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Button,\n} from '@material-ui/core';\nimport SelectIcon from '@material-ui/icons/SelectAll';\nimport Table from '../Table';\nimport useRestClient from '../../hooks/useRestClient';\nimport useTableSearch from '../../hooks/useTableSearch';\nimport useTranslations from '../../hooks/useTranslations';\nimport useStyles from './style';\n\nconst INITIAL_FORM_STATE = {\n  firstName: '',\n  name: '',\n  email: '',\n  phone: '',\n  building: 0,\n  rooms: [],\n  permissionGranted: false,\n};\n\nconst CreateNewUser: React.FunctionComponent<{\n  buildings: any;\n  onRegister: (props: any) => void;\n}> = ({ onRegister, buildings }) => {\n  const { t } = useTranslations();\n  const classes = useStyles();\n  const [formState, setFormState] = React.useState<any>(INITIAL_FORM_STATE);\n  const [rooms, setRooms] = React.useState<any>(null);\n  return (\n    <Paper className={classes.contentContainer}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Input\n            className={classes.input}\n            placeholder={t('register-first-name')}\n            value={formState.firstName}\n            onChange={event =>\n              setFormState({ ...formState, firstName: event.target.value })\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Input\n            className={classes.input}\n            placeholder={t('register-name')}\n            value={formState.name}\n            onChange={event =>\n              setFormState({ ...formState, name: event.target.value })\n            }\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Input\n            className={classes.input}\n            type=\"email\"\n            placeholder={t('register-email')}\n            value={formState.email}\n            onChange={event =>\n              setFormState({ ...formState, email: event.target.value })\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Input\n            className={classes.input}\n            placeholder={t('register-phone')}\n            value={formState.phone}\n            onChange={event =>\n              setFormState({ ...formState, phone: event.target.value })\n            }\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <FormControl style={{ width: '100%' }}>\n            <InputLabel>Gebäude</InputLabel>\n            <Select\n              value={formState.building}\n              onChange={event => {\n                setFormState({\n                  ...formState,\n                  building: event.target.value,\n                });\n                const rooms = buildings\n                  .filter((b: any) => b.id === event.target.value)\n                  .map((v: any) => v.raeume);\n                if (rooms) setRooms(rooms[0]);\n              }}\n            >\n              {buildings &&\n                buildings.length > 0 &&\n                buildings.map((building: any, index: number) => (\n                  <MenuItem key={index} value={building.id}>\n                    {building.bezeichnung}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl style={{ width: '100%' }}>\n            <InputLabel>{t('property-rooms')}</InputLabel>\n            {rooms && rooms.length > 0 && (\n              <Select\n                value={formState.rooms}\n                onChange={event => {\n                  setFormState({\n                    ...formState,\n                    rooms: event.target.value,\n                  });\n                }}\n                multiple\n                input={<Input />}\n              >\n                {rooms.map((room: any, index: number) => {\n                  return (\n                    <MenuItem key={index} value={room.id}>\n                      {room.bezeichnung}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            )}\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              onRegister(formState);\n              setFormState(INITIAL_FORM_STATE);\n            }}\n          >\n            {t('register')}\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst RegisterVisit: React.FunctionComponent = () => {\n  // hooks\n  const classes = useStyles();\n  const reducer = useTableSearch<any>();\n  const { t } = useTranslations();\n  const { client } = useRestClient();\n  if (!reducer) return null;\n\n  const { state, dispatch } = reducer;\n\n  async function getBesucherByFilter() {\n    const res = await client.getBesucherByFilter({\n      skip: state.skip,\n      take: state.limit,\n    });\n\n    if (res)\n      dispatch({\n        type: 'setRows',\n        payload: {\n          rows: res.map((r: any) => ({\n            id: r.id,\n            vorname: 'Max',\n            nachname: 'Mustermann',\n            email: 'max@mustermann.de',\n          })),\n          count: res.length,\n        },\n      });\n  }\n\n  React.useEffect(() => {\n    getBesucherByFilter();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"body1\">{t('administration')}</Typography>\n          <Typography variant=\"h6\">{t('visitor-register')}</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"body1\">Registrieter Besucher</Typography>\n          <Typography variant=\"h6\">Besucher auswählen</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <CreateNewUser onRegister={() => {}} buildings={[]} />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Table\n            rows={state.rows}\n            rowsPerPageOptions={[25, 50, 100]}\n            count={state.count}\n            rowsPerPage={state.limit}\n            page={state.page}\n            onChangePage={() => {}}\n            onChangeRowsPerPage={() => {}}\n            uniqueId=\"id\"\n            toolbarSettings={{\n              title: 'Besucher',\n              tooltipSelected: {\n                title: 'Besucher auswählen',\n                icon: <SelectIcon />,\n                onClick: () => {},\n              },\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default RegisterVisit;\n"]},"metadata":{},"sourceType":"module"}