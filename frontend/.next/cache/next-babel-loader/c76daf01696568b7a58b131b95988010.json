{"ast":null,"code":"export const defaultLocale = 'en';\nexport const locales = ['en', 'de'];\nconst DEFAULT_LOCALE = 'en';\nexport function isLocale(tested) {\n  return locales.some(locale => locale === tested);\n}\nexport function detectLocale(req) {\n  if (req) {\n    const acceptLanugage = req.headers['accept-language'];\n\n    if (acceptLanugage) {\n      const requestedLocales = acceptLanugage.split(',').map(part => {\n        const [locale, priority] = part.trim().split(';q=');\n        return {\n          locale,\n          priority: parseInt(priority)\n        };\n      });\n      requestedLocales.sort((a, b) => b.priority - a.priority);\n      const found = requestedLocales.find(({\n        locale\n      }) => locale !== '*');\n      if (!found) return DEFAULT_LOCALE;else {\n        const locale = found.locale.split('-')[0];\n        if (locales.includes(locale)) return locale;else return DEFAULT_LOCALE;\n      }\n    }\n  }\n\n  if (typeof navigator !== 'undefined') {\n    const locale = navigator.languages[0].split('-')[0];\n    if (locale && locales.includes(locale)) return locale;else return DEFAULT_LOCALE;\n  }\n\n  return DEFAULT_LOCALE;\n}","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/utils/locales.ts"],"names":["defaultLocale","locales","DEFAULT_LOCALE","isLocale","tested","some","locale","detectLocale","req","acceptLanugage","headers","requestedLocales","split","map","part","priority","trim","parseInt","sort","a","b","found","find","includes","navigator","languages"],"mappings":"AAEA,OAAO,MAAMA,aAAa,GAAG,IAAtB;AACP,OAAO,MAAMC,OAAO,GAAG,CAAC,IAAD,EAAO,IAAP,CAAhB;AAEP,MAAMC,cAAc,GAAG,IAAvB;AAEA,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAAoD;AACzD,SAAOH,OAAO,CAACI,IAAR,CAAaC,MAAM,IAAIA,MAAM,KAAKF,MAAlC,CAAP;AACD;AAED,OAAO,SAASG,YAAT,CAAsBC,GAAtB,EAA0D;AAC/D,MAAIA,GAAJ,EAAS;AACP,UAAMC,cAAc,GAAGD,GAAG,CAACE,OAAJ,CAAY,iBAAZ,CAAvB;;AACA,QAAID,cAAJ,EAAoB;AAClB,YAAME,gBAAgB,GAAGF,cAAc,CAACG,KAAf,CAAqB,GAArB,EAA0BC,GAA1B,CAA8BC,IAAI,IAAI;AAC7D,cAAM,CAACR,MAAD,EAASS,QAAT,IAAqBD,IAAI,CAACE,IAAL,GAAYJ,KAAZ,CAAkB,KAAlB,CAA3B;AACA,eAAO;AAAEN,UAAAA,MAAF;AAAUS,UAAAA,QAAQ,EAAEE,QAAQ,CAACF,QAAD;AAA5B,SAAP;AACD,OAHwB,CAAzB;AAIAJ,MAAAA,gBAAgB,CAACO,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACL,QAAF,GAAaI,CAAC,CAACJ,QAA/C;AACA,YAAMM,KAAK,GAAGV,gBAAgB,CAACW,IAAjB,CAAsB,CAAC;AAAEhB,QAAAA;AAAF,OAAD,KAAgBA,MAAM,KAAK,GAAjD,CAAd;AACA,UAAI,CAACe,KAAL,EAAY,OAAOnB,cAAP,CAAZ,KACK;AACH,cAAMI,MAAM,GAAGe,KAAK,CAACf,MAAN,CAAaM,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAf;AACA,YAAIX,OAAO,CAACsB,QAAR,CAAiBjB,MAAjB,CAAJ,EAA8B,OAAOA,MAAP,CAA9B,KACK,OAAOJ,cAAP;AACN;AACF;AACF;;AAED,MAAI,OAAOsB,SAAP,KAAqB,WAAzB,EAAsC;AACpC,UAAMlB,MAAM,GAAGkB,SAAS,CAACC,SAAV,CAAoB,CAApB,EAAuBb,KAAvB,CAA6B,GAA7B,EAAkC,CAAlC,CAAf;AACA,QAAIN,MAAM,IAAIL,OAAO,CAACsB,QAAR,CAAiBjB,MAAjB,CAAd,EAAwC,OAAOA,MAAP,CAAxC,KACK,OAAOJ,cAAP;AACN;;AAED,SAAOA,cAAP;AACD","sourcesContent":["import * as http from 'http';\nimport { Locale } from '../types';\nexport const defaultLocale = 'en';\nexport const locales = ['en', 'de'];\n\nconst DEFAULT_LOCALE = 'en';\n\nexport function isLocale(tested: string): tested is Locale {\n  return locales.some(locale => locale === tested);\n}\n\nexport function detectLocale(req?: http.IncomingMessage): string {\n  if (req) {\n    const acceptLanugage = req.headers['accept-language'];\n    if (acceptLanugage) {\n      const requestedLocales = acceptLanugage.split(',').map(part => {\n        const [locale, priority] = part.trim().split(';q=');\n        return { locale, priority: parseInt(priority) };\n      });\n      requestedLocales.sort((a, b) => b.priority - a.priority);\n      const found = requestedLocales.find(({ locale }) => locale !== '*');\n      if (!found) return DEFAULT_LOCALE;\n      else {\n        const locale = found.locale.split('-')[0];\n        if (locales.includes(locale)) return locale;\n        else return DEFAULT_LOCALE;\n      }\n    }\n  }\n\n  if (typeof navigator !== 'undefined') {\n    const locale = navigator.languages[0].split('-')[0];\n    if (locale && locales.includes(locale)) return locale;\n    else return DEFAULT_LOCALE;\n  }\n\n  return DEFAULT_LOCALE;\n}\n"]},"metadata":{},"sourceType":"module"}