{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Property/index.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { Grid, Typography, Card, CardHeader, CardContent, Divider, Button, Paper, Input, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useTranslations from '../../hooks/useTranslations';\nimport Modal from '../Modal';\nimport Dialog from '../Dialog';\nimport useStyles from './style';\n\nvar PropertyCard = function PropertyCard(_ref) {\n  var title = _ref.title,\n      onViewClick = _ref.onViewClick,\n      onEditClick = _ref.onEditClick,\n      onDeleteClick = _ref.onDeleteClick,\n      isActive = _ref.isActive;\n  var classes = useStyles();\n\n  var _useTranslations = useTranslations(),\n      t = _useTranslations.t;\n\n  return __jsx(React.Fragment, null, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(Card, {\n    className: clsx(_defineProperty({}, classes.active, isActive)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(CardHeader, {\n    title: title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), __jsx(CardContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, onViewClick && __jsx(Button, {\n    onClick: onViewClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, t('view-rooms')), __jsx(Button, {\n    onClick: onEditClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, t('edit')), __jsx(Button, {\n    onClick: onDeleteClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, t('delete'))))));\n};\n\nvar EditModalContent = function EditModalContent(_ref2) {\n  var id = _ref2.id,\n      title = _ref2.title,\n      onSaveClick = _ref2.onSaveClick,\n      onExitClick = _ref2.onExitClick;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(title),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  return __jsx(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Bitte geben Sie eine Bezeichnung ein\"), __jsx(\"div\", {\n    style: {\n      marginTop: '8px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(Input, {\n    placeholder: \"Bezeichnung\",\n    className: classes.input,\n    value: value,\n    onChange: function onChange(event) {\n      return setValue(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '8px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: value === title,\n    onClick: function onClick() {\n      return onSaveClick({\n        title: value,\n        id: id\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Speichern\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onExitClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Abbrechen\")));\n};\n\nvar Property = function Property(_ref3) {\n  var properties = _ref3.properties;\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showEditModal = _React$useState4[0],\n      setShowEditModal = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      showDeleteDialog = _React$useState6[0],\n      setShowDeleteDialog = _React$useState6[1];\n\n  var classes = useStyles();\n\n  var _useTranslations2 = useTranslations(),\n      t = _useTranslations2.t;\n\n  return __jsx(React.Fragment, null, __jsx(Dialog, {\n    open: showDeleteDialog,\n    onClose: function onClose() {\n      return setShowDeleteDialog(false);\n    },\n    title: \"Geb\\xE4ude 1\",\n    content: t('are-you-sure-to-delete'),\n    onAgree: function onAgree() {},\n    onDisagree: function onDisagree() {\n      return setShowDeleteDialog(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), __jsx(Modal, {\n    open: showEditModal,\n    onClose: function onClose() {\n      return setShowEditModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, activeElement && __jsx(EditModalContent, {\n    id: activeElement.id,\n    title: activeElement.title,\n    onSaveClick: function onSaveClick() {},\n    onExitClick: function onExitClick() {\n      return setShowEditModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, t('administration')), __jsx(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Geb\\xE4ude & R\\xE4ume\"))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, properties.map(function (property, index) {\n    return __jsx(ExpansionPanel, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, __jsx(ExpansionPanelSummary, {\n      expandIcon: __jsx(ExpandMoreIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 52\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      variant: \"body1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, property.title)), __jsx(ExpansionPanelDetails, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      container: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, property.rooms.map(function (room, index) {\n      return __jsx(React.Fragment, null, __jsx(Typography, {\n        key: index,\n        variant: \"body1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, room.title), __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      }, t('edit')), __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }, t('delete')));\n    }))));\n  })))));\n};\n\nexport default Property;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Property/index.tsx"],"names":["React","clsx","Grid","Typography","Card","CardHeader","CardContent","Divider","Button","Paper","Input","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","ExpandMoreIcon","useTranslations","Modal","Dialog","useStyles","PropertyCard","title","onViewClick","onEditClick","onDeleteClick","isActive","classes","t","active","EditModalContent","id","onSaveClick","onExitClick","useState","value","setValue","paper","marginTop","input","event","target","Property","properties","showEditModal","setShowEditModal","showDeleteDialog","setShowDeleteDialog","activeElement","root","map","property","index","rooms","room"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\nimport {\n  Grid,\n  Typography,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Button,\n  Paper,\n  Input,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {\n  PropertyProps,\n  PropertyCardProps,\n  EditModalContentProps,\n} from '../../types';\nimport useTranslations from '../../hooks/useTranslations';\nimport Modal from '../Modal';\nimport Dialog from '../Dialog';\nimport useStyles from './style';\n\nconst PropertyCard: React.FunctionComponent<PropertyCardProps> = ({\n  title,\n  onViewClick,\n  onEditClick,\n  onDeleteClick,\n  isActive,\n}) => {\n  const classes = useStyles();\n  const { t } = useTranslations();\n  return (\n    <>\n      <Grid item xs={12} sm={6}>\n        <Card\n          className={clsx({\n            [classes.active]: isActive,\n          })}\n        >\n          <CardHeader title={title} />\n          <Divider />\n          <CardContent>\n            {onViewClick && (\n              <Button onClick={onViewClick}>{t('view-rooms')}</Button>\n            )}\n            <Button onClick={onEditClick}>{t('edit')}</Button>\n            <Button onClick={onDeleteClick}>{t('delete')}</Button>\n          </CardContent>\n        </Card>\n      </Grid>\n    </>\n  );\n};\n\nconst EditModalContent: React.FunctionComponent<EditModalContentProps> = ({\n  id,\n  title,\n  onSaveClick,\n  onExitClick,\n}) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState<string>(title);\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"body1\">\n        Bitte geben Sie eine Bezeichnung ein\n      </Typography>\n      <div style={{ marginTop: '8px' }} />\n      <Input\n        placeholder=\"Bezeichnung\"\n        className={classes.input}\n        value={value}\n        onChange={event => setValue(event.target.value)}\n      />\n      <div style={{ marginTop: '8px' }} />\n      <Grid container justify=\"space-between\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={value === title}\n          onClick={() => onSaveClick({ title: value, id })}\n        >\n          Speichern\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onExitClick}>\n          Abbrechen\n        </Button>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst Property: React.FunctionComponent<{\n  properties: Array<PropertyProps>;\n}> = ({ properties }) => {\n  const [showEditModal, setShowEditModal] = React.useState<boolean>(false);\n  const [showDeleteDialog, setShowDeleteDialog] = React.useState<boolean>(\n    false\n  );\n\n  const classes = useStyles();\n  const { t } = useTranslations();\n\n  return (\n    <>\n      <Dialog\n        open={showDeleteDialog}\n        onClose={() => setShowDeleteDialog(false)}\n        title=\"Gebäude 1\"\n        content={t('are-you-sure-to-delete')}\n        onAgree={() => {}}\n        onDisagree={() => setShowDeleteDialog(false)}\n      />\n      <Modal open={showEditModal} onClose={() => setShowEditModal(false)}>\n        {activeElement && (\n          <EditModalContent\n            id={activeElement.id}\n            title={activeElement.title}\n            onSaveClick={() => {}}\n            onExitClick={() => setShowEditModal(false)}\n          />\n        )}\n      </Modal>\n      <div className={classes.root}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\">{t('administration')}</Typography>\n            <Typography variant=\"h6\">Gebäude & Räume</Typography>\n          </Grid>\n        </Grid>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            {properties.map((property, index) => (\n              <ExpansionPanel key={index}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography variant=\"body1\">{property.title}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                  <Grid container>\n                    {property.rooms.map((room, index) => (\n                      <>\n                        <Typography key={index} variant=\"body1\">\n                          {room.title}\n                        </Typography>\n                        <Button>{t('edit')}</Button>\n                        <Button>{t('delete')}</Button>\n                      </>\n                    ))}\n                  </Grid>\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            ))}\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default Property;\n"]},"metadata":{},"sourceType":"module"}