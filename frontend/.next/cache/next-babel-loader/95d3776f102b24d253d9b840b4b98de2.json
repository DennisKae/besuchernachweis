{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/frontend/src/Link.tsx\";\n\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport MuiLink from '@material-ui/core/Link';\nvar NextComposed = React.forwardRef(function (props, ref) {\n  var as = props.as,\n      href = props.href,\n      replace = props.replace,\n      scroll = props.scroll,\n      passHref = props.passHref,\n      shallow = props.shallow,\n      prefetch = props.prefetch,\n      other = _objectWithoutProperties(props, [\"as\", \"href\", \"replace\", \"scroll\", \"passHref\", \"shallow\", \"prefetch\"]);\n\n  return __jsx(NextLink, {\n    href: href,\n    prefetch: prefetch,\n    as: as,\n    replace: replace,\n    scroll: scroll,\n    shallow: shallow,\n    passHref: passHref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", _extends({\n    ref: ref\n  }, other, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  })));\n});\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nfunction Link(props) {\n  var href = props.href,\n      _props$activeClassNam = props.activeClassName,\n      activeClassName = _props$activeClassNam === void 0 ? 'active' : _props$activeClassNam,\n      classNameProps = props.className,\n      innerRef = props.innerRef,\n      naked = props.naked,\n      other = _objectWithoutProperties(props, [\"href\", \"activeClassName\", \"className\", \"innerRef\", \"naked\"]);\n\n  var router = useRouter();\n  var pathname = typeof href === 'string' ? href : href.pathname;\n  var className = clsx(classNameProps, _defineProperty({}, activeClassName, router.pathname === pathname && activeClassName));\n\n  if (naked) {\n    return __jsx(NextComposed, _extends({\n      className: className,\n      ref: innerRef,\n      href: href\n    }, other, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  return __jsx(MuiLink, _extends({\n    component: NextComposed,\n    className: className,\n    ref: innerRef,\n    href: href\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default React.forwardRef(function (props, ref) {\n  return __jsx(Link, _extends({}, props, {\n    innerRef: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/stephangilli/projects/frontend/src/Link.tsx"],"names":["React","clsx","useRouter","NextLink","MuiLink","NextComposed","forwardRef","props","ref","as","href","replace","scroll","passHref","shallow","prefetch","other","Link","activeClassName","classNameProps","className","innerRef","naked","router","pathname"],"mappings":";;;;;;;;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqD,WAArD;AACA,OAAOC,OAAP,MAAmD,wBAAnD;AAKA,IAAMC,YAAY,GAAGL,KAAK,CAACM,UAAN,CAAuD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAAA,MAClFC,EADkF,GACbF,KADa,CAClFE,EADkF;AAAA,MAC9EC,IAD8E,GACbH,KADa,CAC9EG,IAD8E;AAAA,MACxEC,OADwE,GACbJ,KADa,CACxEI,OADwE;AAAA,MAC/DC,MAD+D,GACbL,KADa,CAC/DK,MAD+D;AAAA,MACvDC,QADuD,GACbN,KADa,CACvDM,QADuD;AAAA,MAC7CC,OAD6C,GACbP,KADa,CAC7CO,OAD6C;AAAA,MACpCC,QADoC,GACbR,KADa,CACpCQ,QADoC;AAAA,MACvBC,KADuB,4BACbT,KADa;;AAG1F,SACE,MAAC,QAAD;AACE,IAAA,IAAI,EAAEG,IADR;AAEE,IAAA,QAAQ,EAAEK,QAFZ;AAGE,IAAA,EAAE,EAAEN,EAHN;AAIE,IAAA,OAAO,EAAEE,OAJX;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,OAAO,EAAEE,OANX;AAOE,IAAA,QAAQ,EAAED,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAG,IAAA,GAAG,EAAEL;AAAR,KAAiBQ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATF,CADF;AAaD,CAhBoB,CAArB;;AA0BA;AACA;AACA,SAASC,IAAT,CAAcV,KAAd,EAAgC;AAAA,MAE5BG,IAF4B,GAQ1BH,KAR0B,CAE5BG,IAF4B;AAAA,8BAQ1BH,KAR0B,CAG5BW,eAH4B;AAAA,MAG5BA,eAH4B,sCAGV,QAHU;AAAA,MAIjBC,cAJiB,GAQ1BZ,KAR0B,CAI5Ba,SAJ4B;AAAA,MAK5BC,QAL4B,GAQ1Bd,KAR0B,CAK5Bc,QAL4B;AAAA,MAM5BC,KAN4B,GAQ1Bf,KAR0B,CAM5Be,KAN4B;AAAA,MAOzBN,KAPyB,4BAQ1BT,KAR0B;;AAU9B,MAAMgB,MAAM,GAAGrB,SAAS,EAAxB;AACA,MAAMsB,QAAQ,GAAG,OAAOd,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACc,QAAxD;AACA,MAAMJ,SAAS,GAAGnB,IAAI,CAACkB,cAAD,sBACnBD,eADmB,EACDK,MAAM,CAACC,QAAP,KAAoBA,QAApB,IAAgCN,eAD/B,EAAtB;;AAIA,MAAII,KAAJ,EAAW;AACT,WAAO,MAAC,YAAD;AAAc,MAAA,SAAS,EAAEF,SAAzB;AAAoC,MAAA,GAAG,EAAEC,QAAzC;AAAmD,MAAA,IAAI,EAAEX;AAAzD,OAAmEM,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAED,SACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAEX,YADb;AAEE,IAAA,SAAS,EAAEe,SAFb;AAGE,IAAA,GAAG,EAAEC,QAHP;AAIE,IAAA,IAAI,EAAEX;AAJR,KAKMM,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD;;AAED,eAAehB,KAAK,CAACM,UAAN,CAA+C,UAACC,KAAD,EAAQC,GAAR;AAAA,SAC5D,MAAC,IAAD,eAAUD,KAAV;AAAiB,IAAA,QAAQ,EAAEC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD4D;AAAA,CAA/C,CAAf","sourcesContent":["/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useRouter } from 'next/router';\nimport NextLink, { LinkProps as NextLinkProps } from 'next/link';\nimport MuiLink, { LinkProps as MuiLinkProps } from '@material-ui/core/Link';\n\ntype NextComposedProps = Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'href'> &\n  NextLinkProps;\n\nconst NextComposed = React.forwardRef<HTMLAnchorElement, NextComposedProps>((props, ref) => {\n  const { as, href, replace, scroll, passHref, shallow, prefetch, ...other } = props;\n\n  return (\n    <NextLink\n      href={href}\n      prefetch={prefetch}\n      as={as}\n      replace={replace}\n      scroll={scroll}\n      shallow={shallow}\n      passHref={passHref}\n    >\n      <a ref={ref} {...other} />\n    </NextLink>\n  );\n});\n\ninterface LinkPropsBase {\n  activeClassName?: string;\n  innerRef?: React.Ref<HTMLAnchorElement>;\n  naked?: boolean;\n}\n\nexport type LinkProps = LinkPropsBase & NextComposedProps & Omit<MuiLinkProps, 'href'>;\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nfunction Link(props: LinkProps) {\n  const {\n    href,\n    activeClassName = 'active',\n    className: classNameProps,\n    innerRef,\n    naked,\n    ...other\n  } = props;\n\n  const router = useRouter();\n  const pathname = typeof href === 'string' ? href : href.pathname;\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === pathname && activeClassName,\n  });\n\n  if (naked) {\n    return <NextComposed className={className} ref={innerRef} href={href} {...other} />;\n  }\n\n  return (\n    <MuiLink\n      component={NextComposed}\n      className={className}\n      ref={innerRef}\n      href={href as string}\n      {...other}\n    />\n  );\n}\n\nexport default React.forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => (\n  <Link {...props} innerRef={ref} />\n));\n"]},"metadata":{},"sourceType":"module"}