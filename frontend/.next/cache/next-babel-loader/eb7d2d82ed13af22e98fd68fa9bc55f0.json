{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Table/index.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Toolbar, Typography, Paper, Button } from '@material-ui/core';\nimport useStyles, { useToolbarStyles } from './style';\n\nfunction formatValue(val) {\n  if (Array.isArray(val)) return val.join(', ');\n  return val;\n}\n\nvar EnhancedTable = function EnhancedTable(_ref) {\n  var rows = _ref.rows,\n      rowsPerPageOptions = _ref.rowsPerPageOptions,\n      count = _ref.count,\n      rowsPerPage = _ref.rowsPerPage,\n      page = _ref.page,\n      onChangePage = _ref.onChangePage,\n      onChangeRowsPerPage = _ref.onChangeRowsPerPage,\n      displayOnly = _ref.displayOnly,\n      onClickRow = _ref.onClickRow,\n      buttonLabel = _ref.buttonLabel;\n  if (rows.length === 0) return null;\n  var classes = useStyles();\n  var cells = Object.keys(rows[0]);\n  if (!displayOnly) cells.push('');\n\n  var EnhancedTableHead = function EnhancedTableHead(_ref2) {\n    var cells = _ref2.cells;\n    return __jsx(TableHead, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, __jsx(TableRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, cells.map(function (cell) {\n      return __jsx(TableCell, {\n        key: cell,\n        align: \"left\",\n        padding: \"default\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, cell);\n    })));\n  };\n\n  var EnhancedTableToolbar = function EnhancedTableToolbar() {\n    var classes = useToolbarStyles();\n    return __jsx(Toolbar, {\n      className: classes.root,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, __jsx(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Besuche\"));\n  };\n\n  var EnhancedTableCell = function EnhancedTableCell(_ref3) {\n    var children = _ref3.children;\n    var classes = useStyles();\n    return __jsx(TableCell, {\n      className: classes.cell,\n      component: \"th\",\n      scope: \"row\",\n      padding: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, children);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, __jsx(EnhancedTableToolbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), __jsx(TableContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(EnhancedTableHead, {\n    cells: cells,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), __jsx(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, index) {\n    var keys = Object.keys(row);\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, keys.map(function (k, index) {\n      // @ts-ignore\n      var value = formatValue(row[k]);\n      return __jsx(EnhancedTableCell, {\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }\n      }, value);\n    }), !displayOnly && __jsx(EnhancedTableCell, {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: function onClick() {\n        if (row['ID']) onClickRow(row['ID']);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }\n    }, buttonLabel)));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: rowsPerPageOptions,\n    labelRowsPerPage: \"Datens\\xE4tze pro Seite\",\n    count: count,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    component: \"div\",\n    onChangePage: onChangePage,\n    onChangeRowsPerPage: onChangeRowsPerPage,\n    labelDisplayedRows: function labelDisplayedRows(_ref4) {\n      var from = _ref4.from,\n          to = _ref4.to,\n          count = _ref4.count;\n      return \"\".concat(from, \"-\").concat(to, \" von \").concat(count);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default EnhancedTable;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Table/index.tsx"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Toolbar","Typography","Paper","Button","useStyles","useToolbarStyles","formatValue","val","Array","isArray","join","EnhancedTable","rows","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","displayOnly","onClickRow","buttonLabel","length","classes","cells","Object","keys","push","EnhancedTableHead","map","cell","EnhancedTableToolbar","root","title","EnhancedTableCell","children","paper","table","slice","row","index","k","value","from","to"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Toolbar,\n  Typography,\n  Paper,\n  Button,\n} from '@material-ui/core';\nimport { EnhancedTableHeadProps, EnhancedTableProps } from '../../types';\nimport useStyles, { useToolbarStyles } from './style';\n\nfunction formatValue(val: string | number | Array<any>) {\n  if (Array.isArray(val)) return val.join(', ');\n  return val;\n}\n\nconst EnhancedTable: React.FunctionComponent<EnhancedTableProps> = ({\n  rows,\n  rowsPerPageOptions,\n  count,\n  rowsPerPage,\n  page,\n  onChangePage,\n  onChangeRowsPerPage,\n  displayOnly,\n  onClickRow,\n  buttonLabel,\n}) => {\n  if (rows.length === 0) return null;\n  const classes = useStyles();\n  const cells = Object.keys(rows[0]);\n  if (!displayOnly) cells.push('');\n\n  const EnhancedTableHead: React.FunctionComponent<EnhancedTableHeadProps> = ({\n    cells,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          {cells.map(cell => (\n            <TableCell key={cell} align=\"left\" padding=\"default\">\n              {cell}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  };\n\n  const EnhancedTableToolbar: React.FunctionComponent = () => {\n    const classes = useToolbarStyles();\n    return (\n      <Toolbar className={classes.root}>\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Besuche\n        </Typography>\n      </Toolbar>\n    );\n  };\n\n  const EnhancedTableCell: React.FunctionComponent = ({ children }) => {\n    const classes = useStyles();\n    return (\n      <TableCell\n        className={classes.cell}\n        component=\"th\"\n        scope=\"row\"\n        padding=\"none\"\n      >\n        {children}\n      </TableCell>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar />\n        <TableContainer>\n          <Table className={classes.table}>\n            <EnhancedTableHead cells={cells} />\n            <TableBody>\n              {rows\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const keys = Object.keys(row);\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                      {keys.map((k, index) => {\n                        // @ts-ignore\n                        const value = formatValue(row[k]);\n                        return (\n                          <EnhancedTableCell key={index}>\n                            {value}\n                          </EnhancedTableCell>\n                        );\n                      })}\n                      {!displayOnly && (\n                        <EnhancedTableCell key={index}>\n                          <Button\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() => {\n                              if (row['ID']) onClickRow(row['ID']);\n                            }}\n                          >\n                            {buttonLabel}\n                          </Button>\n                        </EnhancedTableCell>\n                      )}\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          labelRowsPerPage=\"Datensätze pro Seite\"\n          count={count}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          component=\"div\"\n          onChangePage={onChangePage}\n          onChangeRowsPerPage={onChangeRowsPerPage}\n          labelDisplayedRows={({ from, to, count }) =>\n            `${from}-${to} von ${count}`\n          }\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default EnhancedTable;\n"]},"metadata":{},"sourceType":"module"}