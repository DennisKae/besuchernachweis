{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/RegisterVisit/index.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { Grid, Typography, Paper, Input, InputLabel, FormControl, Select, MenuItem, Button } from '@material-ui/core';\nimport InputIcon from '@material-ui/icons/Input';\nimport Table from '../Table';\nimport useRestClient from '../../hooks/useRestClient';\nimport useTableSearch from '../../hooks/useTableSearch';\nimport useTranslations from '../../hooks/useTranslations';\nimport useStyles from './style';\nvar INITIAL_FORM_STATE = {\n  firstName: '',\n  name: '',\n  email: '',\n  phone: '',\n  building: 0,\n  rooms: [],\n  permissionGranted: false\n};\n\nvar RegisterVisit = function RegisterVisit() {\n  // hooks\n  var classes = useStyles();\n  var reducer = useTableSearch();\n\n  var _useTranslations = useTranslations(),\n      t = _useTranslations.t;\n\n  var _useRestClient = useRestClient(),\n      client = _useRestClient.client;\n\n  if (!reducer) return null;\n  var state = reducer.state,\n      dispatch = reducer.dispatch;\n\n  function getBesucherByFilter() {\n    var res;\n    return _regeneratorRuntime.async(function getBesucherByFilter$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(client.getBesucherByFilter({\n              skip: state.skip,\n              take: state.limit\n            }));\n\n          case 2:\n            res = _context.sent;\n            if (res) dispatch({\n              type: 'setRows',\n              payload: {\n                rows: res.map(function (r) {\n                  return {\n                    id: r.id,\n                    vorname: 'Max',\n                    nachname: 'Mustermann',\n                    email: 'max@mustermann.de'\n                  };\n                }),\n                count: res.length\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  React.useEffect(function () {\n    getBesucherByFilter();\n  }, [state.page, state.limit]);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      buildings = _React$useState2[0],\n      setBuildings = _React$useState2[1];\n\n  React.useEffect(function () {\n    function getGebauede() {\n      var res;\n      return _regeneratorRuntime.async(function getGebauede$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(client.getGebauede());\n\n            case 2:\n              res = _context2.sent;\n              if (res) setBuildings(res);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getGebauede();\n  }, []);\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rooms = _React$useState4[0],\n      setRooms = _React$useState4[1];\n\n  var _React$useState5 = React.useState(INITIAL_FORM_STATE),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      formState = _React$useState6[0],\n      setFormState = _React$useState6[1];\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, t('administration')), __jsx(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, t('visitor-register'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Registrieter Besucher\"), __jsx(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Besucher ausw\\xE4hlen\"))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: classes.contentContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-first-name'),\n    value: formState.firstName,\n    onChange: function onChange(event) {\n      return setFormState(_objectSpread({}, formState, {\n        firstName: event.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-name'),\n    value: formState.name,\n    onChange: function onChange(event) {\n      return setFormState(_objectSpread({}, formState, {\n        name: event.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    type: \"email\",\n    placeholder: t('register-email'),\n    value: formState.email,\n    onChange: function onChange(event) {\n      return setFormState(_objectSpread({}, formState, {\n        email: event.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-phone'),\n    value: formState.phone,\n    onChange: function onChange(event) {\n      return setFormState(_objectSpread({}, formState, {\n        phone: event.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, __jsx(FormControl, {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, __jsx(InputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, \"Geb\\xE4ude\"), __jsx(Select, {\n    value: formState.building,\n    onChange: function onChange(event) {\n      setFormState(_objectSpread({}, formState, {\n        building: event.target.value\n      }));\n      var rooms = buildings.filter(function (b) {\n        return b.id === event.target.value;\n      }).map(function (v) {\n        return v.raeume;\n      });\n      if (rooms) setRooms(rooms[0]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 19\n    }\n  }, buildings && buildings.length > 0 && buildings.map(function (building, index) {\n    return __jsx(MenuItem, {\n      key: index,\n      value: building.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, building.bezeichnung);\n  })))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, __jsx(FormControl, {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, __jsx(InputLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 19\n    }\n  }, t('property-rooms')), rooms && rooms.length > 0 && __jsx(Select, {\n    value: formState.rooms,\n    onChange: function onChange(event) {\n      setFormState(_objectSpread({}, formState, {\n        rooms: event.target.value\n      }));\n    },\n    multiple: true,\n    input: __jsx(Input, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 30\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, rooms.map(function (room, index) {\n    return __jsx(MenuItem, {\n      key: index,\n      value: room.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 27\n      }\n    }, room.bezeichnung);\n  }))))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: function onClick() {\n      setFormState(INITIAL_FORM_STATE);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, t('register')))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    rows: state.rows,\n    rowsPerPageOptions: [25, 50, 100],\n    count: state.count,\n    rowsPerPage: state.limit,\n    page: state.page,\n    onChangePage: function onChangePage(_, newPage) {\n      var newSkip = newPage > state.page ? state.skip + state.limit : state.skip - state.limit;\n      dispatch({\n        type: 'changePage',\n        payload: {\n          skip: newSkip,\n          page: newPage\n        }\n      });\n    },\n    onChangeRowsPerPage: function onChangeRowsPerPage(event) {\n      var limit = Number(event.target.value);\n      dispatch({\n        type: 'changeRowsPerPage',\n        payload: {\n          limit: limit\n        }\n      });\n    },\n    uniqueId: \"id\",\n    toolbarSettings: {\n      title: 'Besucher',\n      tooltipSelected: {\n        title: 'Besucher auswählen',\n        icon: __jsx(InputIcon, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 23\n          }\n        }),\n        onClick: function onClick(ids) {\n          if (ids.length) {\n            var id = ids[0];\n            var user = state.rows.filter(function (u) {\n              return u.id === id;\n            });\n            if (user.length) setFormState({\n              firstName: user[0].vorname,\n              name: user[0].nachname,\n              email: user[0].email\n            });\n          }\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default RegisterVisit;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/RegisterVisit/index.tsx"],"names":["React","Grid","Typography","Paper","Input","InputLabel","FormControl","Select","MenuItem","Button","InputIcon","Table","useRestClient","useTableSearch","useTranslations","useStyles","INITIAL_FORM_STATE","firstName","name","email","phone","building","rooms","permissionGranted","RegisterVisit","classes","reducer","t","client","state","dispatch","getBesucherByFilter","skip","take","limit","res","type","payload","rows","map","r","id","vorname","nachname","count","length","useEffect","page","useState","buildings","setBuildings","getGebauede","setRooms","formState","setFormState","root","contentContainer","input","event","target","value","width","filter","b","v","raeume","index","bezeichnung","room","_","newPage","newSkip","Number","title","tooltipSelected","icon","onClick","ids","user","u"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n  Paper,\n  Input,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Button,\n} from '@material-ui/core';\nimport InputIcon from '@material-ui/icons/Input';\nimport Table from '../Table';\nimport useRestClient from '../../hooks/useRestClient';\nimport useTableSearch from '../../hooks/useTableSearch';\nimport useTranslations from '../../hooks/useTranslations';\nimport useStyles from './style';\n\nconst INITIAL_FORM_STATE = {\n  firstName: '',\n  name: '',\n  email: '',\n  phone: '',\n  building: 0,\n  rooms: [],\n  permissionGranted: false,\n};\n\nconst RegisterVisit: React.FunctionComponent = () => {\n  // hooks\n  const classes = useStyles();\n  const reducer = useTableSearch<any>();\n  const { t } = useTranslations();\n  const { client } = useRestClient();\n  if (!reducer) return null;\n\n  const { state, dispatch } = reducer;\n\n  async function getBesucherByFilter() {\n    const res = await client.getBesucherByFilter({\n      skip: state.skip,\n      take: state.limit,\n    });\n\n    if (res)\n      dispatch({\n        type: 'setRows',\n        payload: {\n          rows: res.map((r: any) => ({\n            id: r.id,\n            vorname: 'Max',\n            nachname: 'Mustermann',\n            email: 'max@mustermann.de',\n          })),\n          count: res.length,\n        },\n      });\n  }\n\n  React.useEffect(() => {\n    getBesucherByFilter();\n  }, [state.page, state.limit]);\n\n  const [buildings, setBuildings] = React.useState<any>(null);\n\n  React.useEffect(() => {\n    async function getGebauede() {\n      const res = await client.getGebauede();\n      if (res) setBuildings(res);\n    }\n    getGebauede();\n  }, []);\n\n  const [rooms, setRooms] = React.useState<any>(null);\n  const [formState, setFormState] = React.useState<any>(INITIAL_FORM_STATE);\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"body1\">{t('administration')}</Typography>\n          <Typography variant=\"h6\">{t('visitor-register')}</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"body1\">Registrieter Besucher</Typography>\n          <Typography variant=\"h6\">Besucher auswählen</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.contentContainer}>\n            <Grid container spacing={4}>\n              <Grid item xs={12} sm={6}>\n                <Input\n                  className={classes.input}\n                  placeholder={t('register-first-name')}\n                  value={formState.firstName}\n                  onChange={event =>\n                    setFormState({\n                      ...formState,\n                      firstName: event.target.value,\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Input\n                  className={classes.input}\n                  placeholder={t('register-name')}\n                  value={formState.name}\n                  onChange={event =>\n                    setFormState({ ...formState, name: event.target.value })\n                  }\n                />\n              </Grid>\n            </Grid>\n            <Grid container spacing={4}>\n              <Grid item xs={12} sm={6}>\n                <Input\n                  className={classes.input}\n                  type=\"email\"\n                  placeholder={t('register-email')}\n                  value={formState.email}\n                  onChange={event =>\n                    setFormState({ ...formState, email: event.target.value })\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Input\n                  className={classes.input}\n                  placeholder={t('register-phone')}\n                  value={formState.phone}\n                  onChange={event =>\n                    setFormState({ ...formState, phone: event.target.value })\n                  }\n                />\n              </Grid>\n            </Grid>\n            <Grid container spacing={4}>\n              <Grid item xs={12} sm={6}>\n                <FormControl style={{ width: '100%' }}>\n                  <InputLabel>Gebäude</InputLabel>\n                  <Select\n                    value={formState.building}\n                    onChange={event => {\n                      setFormState({\n                        ...formState,\n                        building: event.target.value,\n                      });\n                      const rooms = buildings\n                        .filter((b: any) => b.id === event.target.value)\n                        .map((v: any) => v.raeume);\n                      if (rooms) setRooms(rooms[0]);\n                    }}\n                  >\n                    {buildings &&\n                      buildings.length > 0 &&\n                      buildings.map((building: any, index: number) => (\n                        <MenuItem key={index} value={building.id}>\n                          {building.bezeichnung}\n                        </MenuItem>\n                      ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl style={{ width: '100%' }}>\n                  <InputLabel>{t('property-rooms')}</InputLabel>\n                  {rooms && rooms.length > 0 && (\n                    <Select\n                      value={formState.rooms}\n                      onChange={event => {\n                        setFormState({\n                          ...formState,\n                          rooms: event.target.value,\n                        });\n                      }}\n                      multiple\n                      input={<Input />}\n                    >\n                      {rooms.map((room: any, index: number) => {\n                        return (\n                          <MenuItem key={index} value={room.id}>\n                            {room.bezeichnung}\n                          </MenuItem>\n                        );\n                      })}\n                    </Select>\n                  )}\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Grid container spacing={4}>\n              <Grid item xs={12} sm={6}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setFormState(INITIAL_FORM_STATE);\n                  }}\n                >\n                  {t('register')}\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Table\n            rows={state.rows}\n            rowsPerPageOptions={[25, 50, 100]}\n            count={state.count}\n            rowsPerPage={state.limit}\n            page={state.page}\n            onChangePage={(_: any, newPage: number) => {\n              const newSkip =\n                newPage > state.page\n                  ? state.skip + state.limit\n                  : state.skip - state.limit;\n              dispatch({\n                type: 'changePage',\n                payload: { skip: newSkip, page: newPage },\n              });\n            }}\n            onChangeRowsPerPage={event => {\n              const limit = Number(event.target.value);\n              dispatch({ type: 'changeRowsPerPage', payload: { limit } });\n            }}\n            uniqueId=\"id\"\n            toolbarSettings={{\n              title: 'Besucher',\n              tooltipSelected: {\n                title: 'Besucher auswählen',\n                icon: <InputIcon />,\n                onClick: ids => {\n                  if (ids.length) {\n                    const id = ids[0];\n                    const user = state.rows.filter(u => u.id === id);\n                    if (user.length)\n                      setFormState({\n                        firstName: user[0].vorname,\n                        name: user[0].nachname,\n                        email: user[0].email,\n                      });\n                  }\n                },\n              },\n            }}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default RegisterVisit;\n"]},"metadata":{},"sourceType":"module"}