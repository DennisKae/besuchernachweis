{"ast":null,"code":"var _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/context/RestContext.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Client from '../rest-client';\nconst RestContext = React.createContext({\n  client: null,\n  isLoading: false,\n  setIsLoading: () => null,\n  setHasError: () => null,\n  hasError: false\n});\nexport const RestProvider = ({\n  url,\n  children\n}) => {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [hasError, setHasError] = React.useState(false);\n  const client = new Client(url);\n  return __jsx(RestContext.Provider, {\n    value: {\n      client,\n      isLoading,\n      setIsLoading,\n      setHasError,\n      hasError\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport default RestContext;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/context/RestContext.tsx"],"names":["React","Client","RestContext","createContext","client","isLoading","setIsLoading","setHasError","hasError","RestProvider","url","children","useState"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAUA,MAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,CAAkC;AACpDC,EAAAA,MAAM,EAAE,IAD4C;AAEpDC,EAAAA,SAAS,EAAE,KAFyC;AAGpDC,EAAAA,YAAY,EAAE,MAAM,IAHgC;AAIpDC,EAAAA,WAAW,EAAE,MAAM,IAJiC;AAKpDC,EAAAA,QAAQ,EAAE;AAL0C,CAAlC,CAApB;AAQA,OAAO,MAAMC,YAAuC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,KAAuB;AAC5E,QAAM,CAACN,SAAD,EAAYC,YAAZ,IAA4BN,KAAK,CAACY,QAAN,CAAwB,KAAxB,CAAlC;AACA,QAAM,CAACJ,QAAD,EAAWD,WAAX,IAA0BP,KAAK,CAACY,QAAN,CAAwB,KAAxB,CAAhC;AACA,QAAMR,MAAM,GAAG,IAAIH,MAAJ,CAAWS,GAAX,CAAf;AAEA,SACE,MAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEN,MAAAA,MAAF;AAAUC,MAAAA,SAAV;AAAqBC,MAAAA,YAArB;AAAmCC,MAAAA,WAAnC;AAAgDC,MAAAA;AAAhD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGG,QAHH,CADF;AAOD,CAZM;AAcP,eAAeT,WAAf","sourcesContent":["import * as React from 'react';\nimport Client from '../rest-client';\n\ntype ContextProps = {\n  client: Client | null;\n  isLoading: boolean;\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;\n  hasError: boolean;\n  setHasError: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst RestContext = React.createContext<ContextProps>({\n  client: null,\n  isLoading: false,\n  setIsLoading: () => null,\n  setHasError: () => null,\n  hasError: false,\n});\n\nexport const RestProvider: React.FC<{ url: string }> = ({ url, children }) => {\n  const [isLoading, setIsLoading] = React.useState<boolean>(false);\n  const [hasError, setHasError] = React.useState<boolean>(false);\n  const client = new Client(url);\n\n  return (\n    <RestContext.Provider\n      value={{ client, isLoading, setIsLoading, setHasError, hasError }}\n    >\n      {children}\n    </RestContext.Provider>\n  );\n};\n\nexport default RestContext;\n"]},"metadata":{},"sourceType":"module"}