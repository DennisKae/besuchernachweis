{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Main/index.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Sidebar from '../Sidebar';\nimport Topbar from '../Topbar';\nimport useStyles from './style';\n\nvar Main = function Main(_ref) {\n  var _clsx;\n\n  var children = _ref.children;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sidebarOpen = _React$useState2[0],\n      setOpenSidebar = _React$useState2[1];\n\n  var theme = useTheme();\n  var isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: clsx((_clsx = {}, _defineProperty(_clsx, classes.root, true), _defineProperty(_clsx, classes.shiftContent, isDesktop), _clsx)),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Topbar, {\n    onMenuClick: function onMenuClick() {\n      return setOpenSidebar(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), __jsx(Sidebar, {\n    open: sidebarOpen,\n    onClose: function onClose() {\n      return setOpenSidebar(false);\n    },\n    variant: isDesktop ? 'permanent' : 'temporary',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: classes.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Main/index.tsx"],"names":["React","clsx","useMediaQuery","useTheme","Sidebar","Topbar","useStyles","Main","children","useState","sidebarOpen","setOpenSidebar","theme","isDesktop","breakpoints","up","defaultMatches","classes","root","shiftContent","content"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,SAAtB;;AAEA,IAAMC,IAA6B,GAAG,SAAhCA,IAAgC,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,wBAChBR,KAAK,CAACS,QAAN,CAAwB,KAAxB,CADgB;AAAA;AAAA,MAC/CC,WAD+C;AAAA,MAClCC,cADkC;;AAEtD,MAAMC,KAAK,GAAGT,QAAQ,EAAtB;AACA,MAAMU,SAAS,GAAGX,aAAa,CAACU,KAAK,CAACE,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,EAA6B;AAC1DC,IAAAA,cAAc,EAAE;AAD0C,GAA7B,CAA/B;AAIA,MAAMC,OAAO,GAAGX,SAAS,EAAzB;AAEA,SACE;AACE,IAAA,SAAS,EAAEL,IAAI,qCACZgB,OAAO,CAACC,IADI,EACG,IADH,0BAEZD,OAAO,CAACE,YAFI,EAEWN,SAFX,UADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAE;AAAA,aAAMF,cAAc,CAAC,IAAD,CAApB;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,MAAC,OAAD;AACE,IAAA,IAAI,EAAED,WADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMC,cAAc,CAAC,KAAD,CAApB;AAAA,KAFX;AAGE,IAAA,OAAO,EAAEE,SAAS,GAAG,WAAH,GAAiB,WAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAYE;AAAM,IAAA,SAAS,EAAEI,OAAO,CAACG,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCZ,QAAnC,CAZF,CADF;AAgBD,CAzBD;;AA2BA,eAAeD,IAAf","sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\nimport { useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Sidebar from '../Sidebar';\nimport Topbar from '../Topbar';\nimport useStyles from './style';\n\nconst Main: React.FunctionComponent = ({ children }) => {\n  const [sidebarOpen, setOpenSidebar] = React.useState<boolean>(false);\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true,\n  });\n\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n        [classes.shiftContent]: isDesktop,\n      })}\n    >\n      <Topbar onMenuClick={() => setOpenSidebar(true)} />\n      <Sidebar\n        open={sidebarOpen}\n        onClose={() => setOpenSidebar(false)}\n        variant={isDesktop ? 'permanent' : 'temporary'}\n      />\n      <main className={classes.content}>{children}</main>\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}