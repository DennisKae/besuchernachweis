{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Sidebar from '../Sidebar';\nimport Topbar from '../Topbar';\nimport useStyles from './style';\n\nvar Main = function Main(_ref) {\n  var _clsx;\n\n  var children = _ref.children;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sidebarOpen = _React$useState2[0],\n      setOpenSidebar = _React$useState2[1];\n\n  var theme = useTheme();\n  var isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\n    defaultMatches: true\n  });\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: clsx((_clsx = {}, _defineProperty(_clsx, classes.root, true), _defineProperty(_clsx, classes.shiftContent, isDesktop), _clsx))\n  }, __jsx(Topbar, {\n    onMenuClick: function onMenuClick() {\n      return setOpenSidebar(true);\n    }\n  }), __jsx(Sidebar, {\n    open: sidebarOpen,\n    onClose: function onClose() {\n      return setOpenSidebar(false);\n    },\n    variant: isDesktop ? 'permanent' : 'temporary'\n  }), __jsx(\"main\", {\n    className: classes.content\n  }, children));\n};\n\nexport default Main;","map":null,"metadata":{},"sourceType":"module"}