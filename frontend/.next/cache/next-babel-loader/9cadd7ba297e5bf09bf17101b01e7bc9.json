{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { Drawer, Divider, List, ListItem, Button, Select, MenuItem } from '@material-ui/core';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport InputIcon from '@material-ui/icons/Input';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport useTranslations from '../../hooks/useTranslations';\nimport { locales } from '../../utils/locales';\nimport Profile from '../Profile';\nimport useStyles from './style';\n\nvar SidebarNav = function SidebarNav(_ref) {\n  var items = _ref.items;\n  var classes = useStyles();\n  return __jsx(List, {\n    className: classes.nav\n  }, items.map(function (item, index) {\n    return __jsx(ListItem, {\n      className: classes.item,\n      disableGutters: true,\n      key: index\n    }, __jsx(Link, {\n      href: item.link.href,\n      as: item.link.as\n    }, __jsx(Button, {\n      className: classes.button\n    }, __jsx(\"div\", {\n      className: classes.icon\n    }, item.icon), item.title)));\n  }));\n};\n\nvar Sidebar = function Sidebar(_ref2) {\n  var open = _ref2.open,\n      variant = _ref2.variant,\n      onClose = _ref2.onClose;\n  var classes = useStyles();\n\n  var _useTranslations = useTranslations(),\n      locale = _useTranslations.locale,\n      t = _useTranslations.t;\n\n  var router = useRouter();\n  var items = [{\n    title: 'Dashboard',\n    link: {\n      href: \"/[locale]\",\n      as: \"/\".concat(locale)\n    },\n    icon: __jsx(DashboardIcon, null)\n  }, {\n    title: t('navigation-register-visitor'),\n    link: {\n      href: \"/[locale]/visitor/register\",\n      as: \"/\".concat(locale, \"/visitor/register\")\n    },\n    icon: __jsx(PersonAddIcon, null)\n  }, {\n    title: t('navigation-cancle-visitor'),\n    link: {\n      href: \"/[locale]/visitor/cancle\",\n      as: \"/\".concat(locale, \"/visitor/cancle\")\n    },\n    icon: __jsx(InputIcon, null)\n  }, {\n    title: t('navigation-property-management'),\n    link: {\n      href: \"/[locale]/property\",\n      as: \"/\".concat(locale, \"/property\")\n    },\n    icon: __jsx(DomainIcon, null)\n  }];\n  var handleLocaleChange = React.useCallback(function (val) {\n    var regex = new RegExp(\"^/(\".concat(locales.join('|'), \")\"));\n    router.push(router.pathname, router.asPath.replace(regex, \"/\".concat(val)));\n  }, [router]);\n  return __jsx(Drawer, {\n    anchor: \"left\",\n    classes: {\n      paper: classes.drawer\n    },\n    onClose: onClose,\n    open: open,\n    variant: variant\n  }, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Select, {\n    value: locale,\n    onChange: function onChange(event) {\n      return handleLocaleChange(event.target.value);\n    }\n  }, locales.map(function (locale) {\n    return __jsx(MenuItem, {\n      key: locale,\n      value: locale\n    }, locale.toUpperCase());\n  })), __jsx(Profile, {\n    name: \"Stephan Gilli\",\n    role: \"Angestellter\"\n  }), __jsx(Divider, null), __jsx(SidebarNav, {\n    items: items\n  })));\n};\n\nexport default Sidebar;","map":null,"metadata":{},"sourceType":"module"}