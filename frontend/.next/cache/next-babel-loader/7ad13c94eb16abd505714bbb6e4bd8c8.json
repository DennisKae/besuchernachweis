{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Dashboard/index.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { Grid, Typography, TextField, Input, Button } from '@material-ui/core';\nimport useVisitorSearchReducer from '../../hooks/useVisitorSearchReducer';\nimport Table from '../Table';\nimport StatsCard from './StatsCard';\nimport useStyles from './style';\n\nvar Dashboard = function Dashboard() {\n  var reducer = useVisitorSearchReducer();\n  if (!reducer) return null;\n  var _reducer$state = reducer.state,\n      skip = _reducer$state.skip,\n      limit = _reducer$state.limit,\n      count = _reducer$state.count,\n      page = _reducer$state.page,\n      rows = _reducer$state.rows,\n      search = _reducer$state.search,\n      dispatch = reducer.dispatch;\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"Besucher\"), __jsx(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Besucher abmelden\")), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    container: true,\n    justify: \"flex-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    style: {\n      paddingRight: '12px'\n    },\n    label: \"Startdatum\",\n    type: \"datetime-local\",\n    defaultValue: search.startDate,\n    onChange: function onChange(event) {\n      return dispatch({\n        type: 'setSearch',\n        payload: _objectSpread({}, search, {\n          startDate: event.target.value\n        })\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(TextField, {\n    label: \"Enddatum\",\n    type: \"datetime-local\",\n    defaultValue: search.endDate,\n    onChange: function onChange(event) {\n      dispatch({\n        type: 'setSearch',\n        payload: _objectSpread({}, search, {\n          endDate: event.target.value\n        })\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(StatsCard, {\n    title: \"Anzahl Besucher im Zeitraum\",\n    value: \"200\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(StatsCard, {\n    title: \"Anzahl angemeldeter Besucher\",\n    value: \"3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Input, {\n    placeholder: \"Vorname\",\n    style: {\n      width: '100%'\n    },\n    value: search.firstName,\n    onChange: function onChange(event) {\n      return dispatch({\n        type: 'setSearch',\n        payload: _objectSpread({}, search, {\n          firstName: event.target.value\n        })\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '8px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), __jsx(Input, {\n    placeholder: \"Name\",\n    style: {\n      width: '100%'\n    },\n    value: search.name,\n    onChange: function onChange(event) {\n      return dispatch({\n        type: 'setSearch',\n        payload: _objectSpread({}, search, {\n          name: event.target.value\n        })\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '8px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Suchen\"))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    rows: rows,\n    rowsPerPageOptions: [25, 50, 100],\n    count: count,\n    rowsPerPage: limit,\n    page: page,\n    onChangePage: function onChangePage(_, newPage) {\n      var newSkip = newPage > page ? skip + limit : skip - limit;\n      dispatch({\n        type: 'changePage',\n        payload: {\n          skip: newSkip,\n          page: newPage\n        }\n      });\n    },\n    onChangeRowsPerPage: function onChangeRowsPerPage(event) {\n      var limit = Number(event.target.value);\n      dispatch({\n        type: 'changeRowsPerPage',\n        payload: {\n          limit: limit\n        }\n      });\n    },\n    displayOnly: false,\n    onClickRow: function onClickRow(val) {\n      return console.log(val);\n    },\n    buttonLabel: \"Anmelden\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Dashboard/index.tsx"],"names":["React","Grid","Typography","TextField","Input","Button","useVisitorSearchReducer","Table","StatsCard","useStyles","Dashboard","reducer","state","skip","limit","count","page","rows","search","dispatch","classes","root","paddingRight","startDate","event","type","payload","target","value","endDate","width","firstName","marginTop","name","_","newPage","newSkip","Number","val","console","log"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Grid, Typography, TextField, Input, Button } from '@material-ui/core';\nimport useVisitorSearchReducer from '../../hooks/useVisitorSearchReducer';\nimport Table from '../Table';\nimport StatsCard from './StatsCard';\nimport useStyles from './style';\n\nconst Dashboard: React.FunctionComponent = () => {\n  const reducer = useVisitorSearchReducer();\n  if (!reducer) return null;\n\n  const {\n    state: { skip, limit, count, page, rows, search },\n    dispatch,\n  } = reducer;\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"body1\">Besucher</Typography>\n          <Typography variant=\"h6\">Besucher abmelden</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Grid container justify=\"flex-start\">\n            <TextField\n              style={{ paddingRight: '12px' }}\n              label=\"Startdatum\"\n              type=\"datetime-local\"\n              defaultValue={search.startDate}\n              onChange={event =>\n                dispatch({\n                  type: 'setSearch',\n                  payload: { ...search, startDate: event.target.value },\n                })\n              }\n            />\n            <TextField\n              label=\"Enddatum\"\n              type=\"datetime-local\"\n              defaultValue={search.endDate}\n              onChange={event => {\n                dispatch({\n                  type: 'setSearch',\n                  payload: { ...search, endDate: event.target.value },\n                });\n              }}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6} lg={3} xl={3}>\n          <StatsCard title=\"Anzahl Besucher im Zeitraum\" value=\"200\" />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={3} xl={3}>\n          <StatsCard title=\"Anzahl angemeldeter Besucher\" value=\"3\" />\n        </Grid>\n        <Grid item xs={12} sm={6} lg={3} xl={3} alignItems=\"center\">\n          <Input\n            placeholder=\"Vorname\"\n            style={{\n              width: '100%',\n            }}\n            value={search.firstName}\n            onChange={event =>\n              dispatch({\n                type: 'setSearch',\n                payload: { ...search, firstName: event.target.value },\n              })\n            }\n          />\n          <div style={{ marginTop: '8px' }} />\n          <Input\n            placeholder=\"Name\"\n            style={{\n              width: '100%',\n            }}\n            value={search.name}\n            onChange={event =>\n              dispatch({\n                type: 'setSearch',\n                payload: { ...search, name: event.target.value },\n              })\n            }\n          />\n          <div style={{ marginTop: '8px' }} />\n          <Button variant=\"contained\" color=\"primary\">\n            Suchen\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12}>\n          <Table\n            rows={rows}\n            rowsPerPageOptions={[25, 50, 100]}\n            count={count}\n            rowsPerPage={limit}\n            page={page}\n            onChangePage={(_: any, newPage) => {\n              const newSkip = newPage > page ? skip + limit : skip - limit;\n              dispatch({\n                type: 'changePage',\n                payload: { skip: newSkip, page: newPage },\n              });\n            }}\n            onChangeRowsPerPage={event => {\n              const limit = Number(event.target.value);\n              dispatch({ type: 'changeRowsPerPage', payload: { limit } });\n            }}\n            displayOnly={false}\n            onClickRow={val => console.log(val)}\n            buttonLabel=\"Anmelden\"\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}