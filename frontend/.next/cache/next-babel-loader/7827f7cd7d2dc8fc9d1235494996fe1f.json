{"ast":null,"code":"var _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Property/index.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Grid, Typography, ButtonGroup, Button, Paper, Input, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, Divider } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport useTranslations from '../../hooks/useTranslations';\nimport Modal from '../Modal';\nimport Dialog from '../Dialog';\nimport useStyles from './style';\n\nconst EditModalContent = ({\n  id,\n  title,\n  onSaveClick,\n  onExitClick\n}) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(title);\n  return __jsx(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Bitte geben Sie eine Bezeichnung ein\"), __jsx(\"div\", {\n    style: {\n      marginTop: '12px',\n      marginBottom: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(Input, {\n    placeholder: \"Bezeichnung\",\n    className: classes.input,\n    value: value,\n    onChange: event => setValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '12px',\n      marginBotom: '12px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: value === title,\n    onClick: () => onSaveClick({\n      title: value,\n      id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Speichern\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: onExitClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Abbrechen\")));\n};\n\nconst Property = ({\n  properties\n}) => {\n  const [showEditModal, setShowEditModal] = React.useState(false);\n  const [showDeleteDialog, setShowDeleteDialog] = React.useState(false);\n  const [activeElement, setActiveElement] = React.useState(null);\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslations();\n  return __jsx(React.Fragment, null, __jsx(Dialog, {\n    open: showDeleteDialog,\n    onClose: () => setShowDeleteDialog(false),\n    title: \"Geb\\xE4ude 1\",\n    content: t('are-you-sure-to-delete'),\n    onAgree: () => {},\n    onDisagree: () => setShowDeleteDialog(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), __jsx(Modal, {\n    open: showEditModal,\n    onClose: () => setShowEditModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, activeElement && __jsx(EditModalContent, {\n    id: activeElement.id,\n    title: activeElement.title,\n    onSaveClick: () => {},\n    onExitClick: () => setShowEditModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, t('administration')), __jsx(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Geb\\xE4ude & R\\xE4ume\"))), __jsx(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, properties.map((property, index) => __jsx(ExpansionPanel, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, __jsx(ExpansionPanelSummary, {\n    expandIcon: __jsx(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 52\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, property.title)), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }), __jsx(ExpansionPanelDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, __jsx(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }, property.rooms.map((room, index) => __jsx(React.Fragment, null, __jsx(Grid, {\n    container: true,\n    key: index,\n    className: classes.panelDetails,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, __jsx(Typography, {\n    key: index,\n    variant: \"body1\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      marginRight: 'auto',\n      fontWeight: 500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 27\n    }\n  }, room.title), __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 27\n    }\n  }, __jsx(ButtonGroup, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    onClick: () => {\n      setShowEditModal(true);\n      setActiveElement(room);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 31\n    }\n  }, t('edit')), __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 31\n    }\n  }, t('delete'))))), index < property.rooms.length - 1 && __jsx(Divider, {\n    style: {\n      width: '100%',\n      marginBottom: '8px',\n      marginTop: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 27\n    }\n  })))))))))));\n};\n\nexport default Property;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Property/index.tsx"],"names":["React","Grid","Typography","ButtonGroup","Button","Paper","Input","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","Divider","ExpandMoreIcon","useTranslations","Modal","Dialog","useStyles","EditModalContent","id","title","onSaveClick","onExitClick","classes","value","setValue","useState","paper","marginTop","marginBottom","input","event","target","marginBotom","Property","properties","showEditModal","setShowEditModal","showDeleteDialog","setShowDeleteDialog","activeElement","setActiveElement","t","root","map","property","index","rooms","room","panelDetails","display","alignItems","marginRight","fontWeight","length","width"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n  ButtonGroup,\n  Button,\n  Paper,\n  Input,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Divider,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { PropertyProps, EditModalContentProps, RoomProps } from '../../types';\nimport useTranslations from '../../hooks/useTranslations';\nimport Modal from '../Modal';\nimport Dialog from '../Dialog';\nimport useStyles from './style';\n\nconst EditModalContent: React.FunctionComponent<EditModalContentProps> = ({\n  id,\n  title,\n  onSaveClick,\n  onExitClick,\n}) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState<string>(title);\n  return (\n    <Paper className={classes.paper}>\n      <Typography variant=\"body1\">\n        Bitte geben Sie eine Bezeichnung ein\n      </Typography>\n      <div style={{ marginTop: '12px', marginBottom: '12px' }} />\n      <Input\n        placeholder=\"Bezeichnung\"\n        className={classes.input}\n        value={value}\n        onChange={event => setValue(event.target.value)}\n      />\n      <div style={{ marginTop: '12px', marginBotom: '12px' }} />\n      <Grid container justify=\"space-between\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={value === title}\n          onClick={() => onSaveClick({ title: value, id })}\n        >\n          Speichern\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={onExitClick}>\n          Abbrechen\n        </Button>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst Property: React.FunctionComponent<{\n  properties: Array<PropertyProps>;\n}> = ({ properties }) => {\n  const [showEditModal, setShowEditModal] = React.useState<boolean>(false);\n  const [showDeleteDialog, setShowDeleteDialog] = React.useState<boolean>(\n    false\n  );\n\n  const [activeElement, setActiveElement] = React.useState<RoomProps | null>(\n    null\n  );\n\n  const classes = useStyles();\n  const { t } = useTranslations();\n\n  return (\n    <>\n      <Dialog\n        open={showDeleteDialog}\n        onClose={() => setShowDeleteDialog(false)}\n        title=\"Gebäude 1\"\n        content={t('are-you-sure-to-delete')}\n        onAgree={() => {}}\n        onDisagree={() => setShowDeleteDialog(false)}\n      />\n      <Modal open={showEditModal} onClose={() => setShowEditModal(false)}>\n        {activeElement && (\n          <EditModalContent\n            id={activeElement.id}\n            title={activeElement.title}\n            onSaveClick={() => {}}\n            onExitClick={() => setShowEditModal(false)}\n          />\n        )}\n      </Modal>\n      <div className={classes.root}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"body1\">{t('administration')}</Typography>\n            <Typography variant=\"h6\">Gebäude & Räume</Typography>\n          </Grid>\n        </Grid>\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n            {properties.map((property, index) => (\n              <ExpansionPanel key={index}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography variant=\"body1\">{property.title}</Typography>\n                </ExpansionPanelSummary>\n                <Divider />\n                <ExpansionPanelDetails>\n                  <Grid container>\n                    {property.rooms.map((room, index) => (\n                      <>\n                        <Grid\n                          container\n                          key={index}\n                          className={classes.panelDetails}\n                        >\n                          <Typography\n                            key={index}\n                            variant=\"body1\"\n                            style={{\n                              display: 'flex',\n                              alignItems: 'center',\n                              marginRight: 'auto',\n                              fontWeight: 500,\n                            }}\n                          >\n                            {room.title}\n                          </Typography>\n                          <Grid item>\n                            <ButtonGroup variant=\"outlined\" color=\"secondary\">\n                              <Button\n                                onClick={() => {\n                                  setShowEditModal(true);\n                                  setActiveElement(room);\n                                }}\n                              >\n                                {t('edit')}\n                              </Button>\n                              <Button>{t('delete')}</Button>\n                            </ButtonGroup>\n                          </Grid>\n                        </Grid>\n                        {index < property.rooms.length - 1 && (\n                          <Divider\n                            style={{\n                              width: '100%',\n                              marginBottom: '8px',\n                              marginTop: '8px',\n                            }}\n                          />\n                        )}\n                      </>\n                    ))}\n                  </Grid>\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            ))}\n          </Grid>\n        </Grid>\n      </div>\n    </>\n  );\n};\n\nexport default Property;\n"]},"metadata":{},"sourceType":"module"}