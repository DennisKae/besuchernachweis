{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Alert/index.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport useRestClient from '../../hooks/useRestClient';\n\nvar MyAlert = function MyAlert() {\n  var _useRestClient = useRestClient(),\n      hasError = _useRestClient.hasError,\n      setHasError = _useRestClient.setHasError;\n\n  if (hasError) {\n    setTimeout(function () {\n      setHasError(false);\n    }, 3000);\n    return __jsx(Alert, {\n      severity: \"error\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, __jsx(AlertTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, \"Error\"), \"Es ist ein unerwarteter Fehler aufgetreten\");\n  }\n\n  return null;\n};\n\nexport default MyAlert;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Alert/index.tsx"],"names":["React","Alert","AlertTitle","useRestClient","MyAlert","hasError","setHasError","setTimeout"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAEA,IAAMC,OAAgC,GAAG,SAAnCA,OAAmC,GAAM;AAAA,uBACXD,aAAa,EADF;AAAA,MACrCE,QADqC,kBACrCA,QADqC;AAAA,MAC3BC,WAD2B,kBAC3BA,WAD2B;;AAG7C,MAAID,QAAJ,EAAc;AACZE,IAAAA,UAAU,CAAC,YAAM;AACfD,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFS,EAEP,IAFO,CAAV;AAGA,WACE,MAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,+CADF;AAMD;;AACD,SAAO,IAAP;AACD,CAfD;;AAiBA,eAAeF,OAAf","sourcesContent":["import * as React from 'react';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport useRestClient from '../../hooks/useRestClient';\n\nconst MyAlert: React.FunctionComponent = () => {\n  const { hasError, setHasError } = useRestClient();\n\n  if (hasError) {\n    setTimeout(() => {\n      setHasError(false);\n    }, 3000);\n    return (\n      <Alert severity=\"error\">\n        <AlertTitle>Error</AlertTitle>\n        Es ist ein unerwarteter Fehler aufgetreten\n      </Alert>\n    );\n  }\n  return null;\n};\n\nexport default MyAlert;\n"]},"metadata":{},"sourceType":"module"}