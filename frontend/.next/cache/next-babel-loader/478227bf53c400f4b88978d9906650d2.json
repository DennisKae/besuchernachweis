{"ast":null,"code":"var _jsxFileName = \"/Users/stephangilli/projects/besuchernachweis/frontend/components/Table/index.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Toolbar, Typography, Paper, Button, IconButton, Checkbox, Tooltip } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport useStyles, { useToolbarStyles } from './style';\n\nfunction formatValue(val) {\n  if (Array.isArray(val)) return val.join(', ');\n  return val;\n}\n\nconst EnhancedTable = ({\n  rows,\n  rowsPerPageOptions,\n  count,\n  rowsPerPage,\n  page,\n  onChangePage,\n  onChangeRowsPerPage,\n  displayOnly,\n  onClickRow,\n  buttonLabel\n}) => {\n  if (rows.length === 0) return null;\n  const classes = useStyles();\n  const cells = Object.keys(rows[0]);\n  if (!displayOnly) cells.push(''); // state\n\n  const [selected, setSelected] = React.useState([]);\n\n  const EnhancedTableHead = ({\n    cells,\n    numSelected,\n    rowCount,\n    onSelectAll\n  }) => {\n    return __jsx(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, __jsx(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, __jsx(TableCell, {\n      padding: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, __jsx(Checkbox, {\n      indeterminate: numSelected > 0 && numSelected < rowCount,\n      checked: rowCount > 0 && numSelected === rowCount,\n      onChange: onSelectAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    })), cells.map(cell => __jsx(TableCell, {\n      key: cell,\n      align: \"left\",\n      padding: \"default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, cell))));\n  };\n\n  const EnhancedTableToolbar = ({\n    numSelected\n  }) => {\n    const classes = useToolbarStyles();\n    return __jsx(Toolbar, {\n      className: clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, numSelected > 0 ? __jsx(Typography, {\n      className: classes.title,\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, numSelected, \" ausgew\\xE4hlt\") : __jsx(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, \"Besuche\"), numSelected > 0 ? __jsx(Tooltip, {\n      title: \"L\\xF6schen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, __jsx(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, __jsx(DeleteIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }))) : __jsx(Tooltip, {\n      title: \"Filter Liste\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, __jsx(IconButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, __jsx(FilterListIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }))));\n  };\n\n  const EnhancedTableCell = ({\n    children\n  }) => {\n    const classes = useStyles();\n    return __jsx(TableCell, {\n      className: classes.cell,\n      component: \"th\",\n      scope: \"row\",\n      padding: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, children);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, __jsx(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), __jsx(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, __jsx(EnhancedTableHead, {\n    cells: cells,\n    numSelected: selected.lengt,\n    rowCount: rowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, rows.map((row, index) => {\n    const keys = Object.keys(row);\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, keys.map((k, index) => {\n      // @ts-ignore\n      const value = formatValue(row[k]);\n      return __jsx(EnhancedTableCell, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }\n      }, value);\n    }), !displayOnly && __jsx(EnhancedTableCell, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }, __jsx(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: () => {\n        if (row['ID']) onClickRow(row['ID']);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, buttonLabel)));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: rowsPerPageOptions,\n    labelRowsPerPage: \"Datens\\xE4tze pro Seite\",\n    count: count,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    component: \"div\",\n    onChangePage: onChangePage,\n    onChangeRowsPerPage: onChangeRowsPerPage,\n    labelDisplayedRows: ({\n      from,\n      to,\n      count\n    }) => `${from}-${to} von ${count}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default EnhancedTable;","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/components/Table/index.tsx"],"names":["React","clsx","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Toolbar","Typography","Paper","Button","IconButton","Checkbox","Tooltip","DeleteIcon","FilterListIcon","useStyles","useToolbarStyles","formatValue","val","Array","isArray","join","EnhancedTable","rows","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","displayOnly","onClickRow","buttonLabel","length","classes","cells","Object","keys","push","selected","setSelected","useState","EnhancedTableHead","numSelected","rowCount","onSelectAll","map","cell","EnhancedTableToolbar","root","highlight","title","EnhancedTableCell","children","paper","table","lengt","row","index","k","value","from","to"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport clsx from 'clsx';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Toolbar,\n  Typography,\n  Paper,\n  Button,\n  IconButton,\n  Checkbox,\n  Tooltip,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport {\n  EnhancedTableHeadProps,\n  EnhancedTableProps,\n  EnhancedTableToolbarProps,\n} from '../../types';\nimport useStyles, { useToolbarStyles } from './style';\n\nfunction formatValue(val: string | number | Array<any>) {\n  if (Array.isArray(val)) return val.join(', ');\n  return val;\n}\n\nconst EnhancedTable: React.FunctionComponent<EnhancedTableProps> = ({\n  rows,\n  rowsPerPageOptions,\n  count,\n  rowsPerPage,\n  page,\n  onChangePage,\n  onChangeRowsPerPage,\n  displayOnly,\n  onClickRow,\n  buttonLabel,\n}) => {\n  if (rows.length === 0) return null;\n  const classes = useStyles();\n  const cells = Object.keys(rows[0]);\n  if (!displayOnly) cells.push('');\n\n  // state\n  const [selected, setSelected] = React.useState<Array<string | number>>([]);\n\n  const EnhancedTableHead: React.FunctionComponent<EnhancedTableHeadProps> = ({\n    cells,\n    numSelected,\n    rowCount,\n    onSelectAll,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAll}\n            />\n          </TableCell>\n          {cells.map(cell => (\n            <TableCell key={cell} align=\"left\" padding=\"default\">\n              {cell}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  };\n\n  const EnhancedTableToolbar: React.FunctionComponent<EnhancedTableToolbarProps> = ({\n    numSelected,\n  }) => {\n    const classes = useToolbarStyles();\n    return (\n      <Toolbar\n        className={clsx(classes.root, {\n          [classes.highlight]: numSelected > 0,\n        })}\n      >\n        {numSelected > 0 ? (\n          <Typography\n            className={classes.title}\n            color=\"inherit\"\n            variant=\"subtitle1\"\n          >\n            {numSelected} ausgewählt\n          </Typography>\n        ) : (\n          <Typography className={classes.title} variant=\"h6\">\n            Besuche\n          </Typography>\n        )}\n        {numSelected > 0 ? (\n          <Tooltip title=\"Löschen\">\n            <IconButton>\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Filter Liste\">\n            <IconButton>\n              <FilterListIcon />\n            </IconButton>\n          </Tooltip>\n        )}\n      </Toolbar>\n    );\n  };\n\n  const EnhancedTableCell: React.FunctionComponent = ({ children }) => {\n    const classes = useStyles();\n    return (\n      <TableCell\n        className={classes.cell}\n        component=\"th\"\n        scope=\"row\"\n        padding=\"none\"\n      >\n        {children}\n      </TableCell>\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table className={classes.table}>\n            <EnhancedTableHead\n              cells={cells}\n              numSelected={selected.lengt}\n              rowCount={rowsPerPage}\n            />\n            <TableBody>\n              {rows.map((row, index) => {\n                const keys = Object.keys(row);\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={index}>\n                    {keys.map((k, index) => {\n                      // @ts-ignore\n                      const value = formatValue(row[k]);\n                      return (\n                        <EnhancedTableCell key={index}>\n                          {value}\n                        </EnhancedTableCell>\n                      );\n                    })}\n                    {!displayOnly && (\n                      <EnhancedTableCell key={index}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() => {\n                            if (row['ID']) onClickRow(row['ID']);\n                          }}\n                        >\n                          {buttonLabel}\n                        </Button>\n                      </EnhancedTableCell>\n                    )}\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={rowsPerPageOptions}\n          labelRowsPerPage=\"Datensätze pro Seite\"\n          count={count}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          component=\"div\"\n          onChangePage={onChangePage}\n          onChangeRowsPerPage={onChangeRowsPerPage}\n          labelDisplayedRows={({ from, to, count }) =>\n            `${from}-${to} von ${count}`\n          }\n        />\n      </Paper>\n    </div>\n  );\n};\n\nexport default EnhancedTable;\n"]},"metadata":{},"sourceType":"module"}