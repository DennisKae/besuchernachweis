{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Grid, Typography, Paper, Input, InputLabel, FormControl, RadioGroup, Radio, FormControlLabel, Select, MenuItem, Switch, Button } from '@material-ui/core';\nimport Table from '../Table';\nimport useTranslations from '../../hooks/useTranslations';\nimport useStyles from './style';\n\nconst CreateNewUser = () => {\n  const {\n    t\n  } = useTranslations();\n  const classes = useStyles();\n  const [formState, setFormState] = React.useState({\n    firstName: '',\n    name: '',\n    email: '',\n    phone: '',\n    rooms: [],\n    permissionGranted: false\n  });\n  return __jsx(Paper, {\n    className: classes.contentContainer\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-first-name'),\n    value: formState.firstName,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      firstName: event.target.value\n    }))\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-name'),\n    value: formState.name,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      name: event.target.value\n    }))\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Input, {\n    className: classes.input,\n    type: \"email\",\n    placeholder: t('register-email'),\n    value: formState.email,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      email: event.target.value\n    }))\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Input, {\n    className: classes.input,\n    placeholder: t('register-phone'),\n    value: formState.phone,\n    onChange: event => setFormState(_objectSpread({}, formState, {\n      phone: event.target.value\n    }))\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(FormControl, {\n    style: {\n      width: '100%'\n    }\n  }, __jsx(InputLabel, null, t('property-rooms')), __jsx(Select, {\n    value: formState.rooms,\n    onChange: event => {\n      setFormState(_objectSpread({}, formState, {\n        rooms: event.target.value\n      }));\n    },\n    multiple: true,\n    input: __jsx(Input, null)\n  }, __jsx(MenuItem, {\n    value: \"Raum 2\"\n  }, \"Raum 2\"), __jsx(MenuItem, {\n    value: \"Raum 3\"\n  }, \"Raum 3\"), __jsx(MenuItem, {\n    value: \"Raum 4\"\n  }, \"Raum 4\"), __jsx(MenuItem, {\n    value: \"Raum 1\"\n  }, \"Raum 1\")))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: formState.permissionGranted,\n      onChange: () => setFormState(_objectSpread({}, formState, {\n        permissionGranted: !formState.permissionGranted\n      })),\n      name: \"access\"\n    }),\n    label: t('register-permission-granted')\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\"\n  }, t('register')))));\n};\n\nconst RegisterVisit = () => {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslations();\n  const [visitorType, setVisitorType] = React.useState('new');\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Typography, {\n    variant: \"body1\"\n  }, t('administration')), __jsx(Typography, {\n    variant: \"h6\"\n  }, t('visitor-register')))), __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(FormControl, {\n    component: \"fieldset\"\n  }, __jsx(RadioGroup, {\n    row: true,\n    name: \"visitorType\",\n    value: visitorType,\n    onChange: event => setVisitorType(event.target.value)\n  }, __jsx(FormControlLabel, {\n    value: \"new\",\n    control: __jsx(Radio, null),\n    label: \"Neuer Besucher\",\n    labelPlacement: \"start\",\n    style: {\n      marginRight: '4px'\n    }\n  }), __jsx(FormControlLabel, {\n    value: \"registered\",\n    control: __jsx(Radio, null),\n    label: \"Bereits regisitriert\",\n    labelPlacement: \"end\",\n    style: {\n      marginLeft: '4px'\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, visitorType === 'new' && __jsx(CreateNewUser, null), visitorType === 'registered' && __jsx(Table, {\n    rows: [{\n      id: '123',\n      name: 'name'\n    }],\n    rowsPerPageOptions: [25, 50, 100],\n    count: 1,\n    rowsPerPage: 25,\n    page: 0,\n    onChangePage: () => {},\n    onChangeRowsPerPage: () => {},\n    displayOnly: false,\n    onClickRow: () => {},\n    buttonLabel: \"Anmelden\"\n  })))));\n};\n\nexport default RegisterVisit;","map":null,"metadata":{},"sourceType":"module"}