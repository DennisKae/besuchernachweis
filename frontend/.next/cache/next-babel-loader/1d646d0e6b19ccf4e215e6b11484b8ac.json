{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { Grid, Typography, TextField, Input, Button, Card, CardContent } from '@material-ui/core';\nimport useVisitorSearchReducer from '../../hooks/useVisitorSearchReducer';\nimport useTranslations from '../../hooks/useTranslations';\nimport Table from '../Table';\nimport StatsCard from '../StatsCard';\nimport useStyles from './style';\n\nvar Dashboard = function Dashboard() {\n  var reducer = useVisitorSearchReducer();\n  if (!reducer) return null;\n  var _reducer$state = reducer.state,\n      skip = _reducer$state.skip,\n      limit = _reducer$state.limit,\n      count = _reducer$state.count,\n      page = _reducer$state.page,\n      rows = _reducer$state.rows,\n      search = _reducer$state.search,\n      dispatch = reducer.dispatch;\n  React.useEffect(function () {\n    function getVisitors() {\n      var res, data;\n      return _regeneratorRuntime.async(function getVisitors$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('http://ec2-3-127-244-90.eu-central-1.compute.amazonaws.com/api/Besuch/GetByFilter', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  vorname: 'Max',\n                  name: 'Mustermann',\n                  datumVon: search.startDate,\n                  datumBis: search.endDate\n                })\n              }));\n\n            case 3:\n              res = _context.sent;\n\n              if (!res.ok) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 7:\n              data = _context.sent;\n              console.log(data);\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    }\n\n    getVisitors();\n  }, []);\n  var classes = useStyles();\n\n  var _useTranslations = useTranslations(),\n      t = _useTranslations.t;\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  }, __jsx(Typography, {\n    variant: \"body1\"\n  }, t('administration')), __jsx(Typography, {\n    variant: \"h6\"\n  }, t('visitor-cancle'))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6\n  })), __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3\n  }, __jsx(StatsCard, {\n    title: t('visitor-count-for-period'),\n    value: \"200\"\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3\n  }, __jsx(StatsCard, {\n    title: t('visitor-count-current-registered'),\n    value: \"\".concat(rows.length)\n  })), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    alignItems: \"center\"\n  }, __jsx(Card, null, __jsx(CardContent, null, __jsx(Input, {\n    placeholder: t('search-name'),\n    style: {\n      width: '100%'\n    },\n    value: search.firstName,\n    onChange: function onChange(event) {\n      return dispatch({\n        type: 'setSearch',\n        payload: _objectSpread({}, search, {\n          firstName: event.target.value\n        })\n      });\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '8px'\n    }\n  }), __jsx(Input, {\n    placeholder: t('search-first-name'),\n    style: {\n      width: '100%'\n    },\n    value: search.name,\n    onChange: function onChange(event) {\n      return dispatch({\n        type: 'setSearch',\n        payload: _objectSpread({}, search, {\n          name: event.target.value\n        })\n      });\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: '8px'\n    }\n  }), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\"\n  }, t('search-apply'))))), __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    lg: 3,\n    xl: 3,\n    alignItems: \"center\"\n  }, __jsx(Card, null, __jsx(CardContent, null, __jsx(Grid, {\n    container: true,\n    justify: \"flex-start\"\n  }, __jsx(TextField, {\n    style: {\n      paddingRight: '12px'\n    },\n    label: t('search-start-date'),\n    type: \"datetime-local\",\n    defaultValue: search.startDate,\n    onChange: function onChange(event) {\n      return dispatch({\n        type: 'setSearch',\n        payload: _objectSpread({}, search, {\n          startDate: event.target.value\n        })\n      });\n    }\n  }), __jsx(TextField, {\n    label: t('search-end-date'),\n    type: \"datetime-local\",\n    defaultValue: search.endDate,\n    onChange: function onChange(event) {\n      dispatch({\n        type: 'setSearch',\n        payload: _objectSpread({}, search, {\n          endDate: event.target.value\n        })\n      });\n    }\n  })))))), __jsx(Grid, {\n    container: true,\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Table, {\n    rows: rows,\n    rowsPerPageOptions: [25, 50, 100],\n    count: count,\n    rowsPerPage: limit,\n    page: page,\n    onChangePage: function onChangePage(_, newPage) {\n      var newSkip = newPage > page ? skip + limit : skip - limit;\n      dispatch({\n        type: 'changePage',\n        payload: {\n          skip: newSkip,\n          page: newPage\n        }\n      });\n    },\n    onChangeRowsPerPage: function onChangeRowsPerPage(event) {\n      var limit = Number(event.target.value);\n      dispatch({\n        type: 'changeRowsPerPage',\n        payload: {\n          limit: limit\n        }\n      });\n    },\n    displayOnly: false,\n    onClickRow: function onClickRow(val) {\n      return console.log(val);\n    },\n    buttonLabel: \"Abmelden\"\n  }))));\n};\n\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}