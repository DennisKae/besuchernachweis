{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport fetch from 'isomorphic-unfetch';\n\nfunction fetcher(baseURL) {\n  function fetchRessource(url, fetchOptions) {\n    var u, xhr;\n    return _regeneratorRuntime.async(function fetchRessource$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            u = \"\".concat(baseURL).concat(url);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(u, fetchOptions));\n\n          case 4:\n            xhr = _context.sent;\n\n            if (!xhr.ok) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", xhr.json());\n\n          case 7:\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            throw new Error(\"Unexpected error during fetch of URL \".concat(u, \": \").concat(_context.t0));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  }\n\n  return fetchRessource;\n}\n\nvar RestClient = /*#__PURE__*/function () {\n  function RestClient(url) {\n    _classCallCheck(this, RestClient);\n\n    _defineProperty(this, \"fetcher\", void 0);\n\n    this.fetcher = fetcher(url);\n  }\n\n  _createClass(RestClient, [{\n    key: \"login\",\n    value: function login(props) {\n      return _regeneratorRuntime.async(function login$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", this.fetcher(\"Auth/Login\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(props)\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"register\",\n    value: function register(props) {\n      return _regeneratorRuntime.async(function register$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", this.fetcher(\"Auth/Register\", {\n                method: 'POST',\n                hedaders: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(props)\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"postBesuch\",\n    value: function postBesuch(props) {\n      return _regeneratorRuntime.async(function postBesuch$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", this.fetcher(\"Besuch\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(props)\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"setEndzeitpunkt\",\n    value: function setEndzeitpunkt(props) {\n      return _regeneratorRuntime.async(function setEndzeitpunkt$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", this.fetcher(\"Besuch/SetEndzeitpunkt\", {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/jsoon'\n                },\n                body: JSON.stringify(props)\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getByFilter\",\n    value: function getByFilter(props) {\n      return _regeneratorRuntime.async(function getByFilter$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", this.fetcher(\"Besuch/GetByFilter\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(props)\n              }));\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"postBesucher\",\n    value: function postBesucher(props) {\n      return _regeneratorRuntime.async(function postBesucher$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              return _context7.abrupt(\"return\", this.fetcher(\"Besucher\", {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(props)\n              }));\n\n            case 1:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getGebauede\",\n    value: function getGebauede() {\n      return _regeneratorRuntime.async(function getGebauede$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              return _context8.abrupt(\"return\", this.fetcher(\"Gebaeude\", {\n                method: 'GET'\n              }));\n\n            case 1:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }]);\n\n  return RestClient;\n}();\n\nexport { RestClient as default };","map":{"version":3,"sources":["/Users/stephangilli/projects/besuchernachweis/frontend/rest-client/index.tsx"],"names":["fetch","fetcher","baseURL","fetchRessource","url","fetchOptions","u","xhr","ok","json","Error","RestClient","props","method","headers","body","JSON","stringify","hedaders"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,SAASC,OAAT,CAAiBC,OAAjB,EAAkC;AAChC,WAAeC,cAAf,CACEC,GADF,EAEEC,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAIQC,YAAAA,CAJR,aAIeJ,OAJf,SAIyBE,GAJzB;AAAA;AAAA;AAAA,6CAMsBJ,KAAK,CAACM,CAAD,EAAID,YAAJ,CAN3B;;AAAA;AAMUE,YAAAA,GANV;;AAAA,iBAOQA,GAAG,CAACC,EAPZ;AAAA;AAAA;AAAA;;AAAA,6CAQaD,GAAG,CAACE,IAAJ,EARb;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,kBAWU,IAAIC,KAAJ,gDAAkDJ,CAAlD,4BAXV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,SAAOH,cAAP;AACD;;IAEoBQ,U;AAEnB,sBAAYP,GAAZ,EAAyB;AAAA;;AAAA;;AACvB,SAAKH,OAAL,GAAeA,OAAO,CAACG,GAAD,CAAtB;AACD;;;;0BACWQ,K;;;;;gDACH,KAAKX,OAAL,eAA2B;AAChCY,gBAAAA,MAAM,EAAE,MADwB;AAEhCC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAFuB;AAKhCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AAL0B,eAA3B,C;;;;;;;;;;;6BAQMA,K;;;;;gDAKN,KAAKX,OAAL,kBAA8B;AACnCY,gBAAAA,MAAM,EAAE,MAD2B;AAEnCK,gBAAAA,QAAQ,EAAE;AACR,kCAAgB;AADR,iBAFyB;AAKnCH,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AAL6B,eAA9B,C;;;;;;;;;;;+BAQQA,K;;;;;gDACR,KAAKX,OAAL,WAAuB;AAC5BY,gBAAAA,MAAM,EAAE,MADoB;AAE5BC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAFmB;AAK5BC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AALsB,eAAvB,C;;;;;;;;;;;oCAQaA,K;;;;;gDACb,KAAKX,OAAL,2BAAuC;AAC5CY,gBAAAA,MAAM,EAAE,KADoC;AAE5CC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAFmC;AAK5CC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AALsC,eAAvC,C;;;;;;;;;;;gCAQSA,K;;;;;gDAQT,KAAKX,OAAL,uBAAmC;AACxCY,gBAAAA,MAAM,EAAE,MADgC;AAExCC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAF+B;AAKxCC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AALkC,eAAnC,C;;;;;;;;;;;iCAQUA,K;;;;;gDAIV,KAAKX,OAAL,aAAyB;AAC9BY,gBAAAA,MAAM,EAAE,MADsB;AAE9BC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT,iBAFqB;AAK9BC,gBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AALwB,eAAzB,C;;;;;;;;;;;;;;;;gDASA,KAAKX,OAAL,aAAyB;AAC9BY,gBAAAA,MAAM,EAAE;AADsB,eAAzB,C;;;;;;;;;;;;;;SA1EUF,U","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nfunction fetcher(baseURL: string) {\n  async function fetchRessource(\n    url: string,\n    fetchOptions?: object\n  ): Promise<any> {\n    const u = `${baseURL}${url}`;\n    try {\n      const xhr = await fetch(u, fetchOptions);\n      if (xhr.ok) {\n        return xhr.json();\n      }\n    } catch (error) {\n      throw new Error(`Unexpected error during fetch of URL ${u}: ${error}`);\n    }\n  }\n  return fetchRessource;\n}\n\nexport default class RestClient {\n  fetcher: (url: string, options?: any) => Promise<any>;\n  constructor(url: string) {\n    this.fetcher = fetcher(url);\n  }\n  async login(props: { email: string; password: string }) {\n    return this.fetcher(`Auth/Login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async register(props: {\n    sicherheitsfrage: string;\n    rolle: string;\n    person: { name: string; vorname: string; email: string; telefon: string };\n  }) {\n    return this.fetcher(`Auth/Register`, {\n      method: 'POST',\n      hedaders: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async postBesuch(props: { besucher: Array<number>; raeume: Array<number> }) {\n    return this.fetcher(`Besuch`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async setEndzeitpunkt(props: { id: string; endzeit: string }) {\n    return this.fetcher(`Besuch/SetEndzeitpunkt`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/jsoon',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async getByFilter(props: {\n    datumVon: string;\n    datumBis: string;\n    skip: number;\n    take: number;\n    name: string;\n    vorname: string;\n  }) {\n    return this.fetcher(`Besuch/GetByFilter`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async postBesucher(props: {\n    person: { name: string; vorname: string; email: string; telefon: string };\n    gesundheitsstatus: string;\n  }) {\n    return this.fetcher(`Besucher`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async getGebauede() {\n    return this.fetcher(`Gebaeude`, {\n      method: 'GET',\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}