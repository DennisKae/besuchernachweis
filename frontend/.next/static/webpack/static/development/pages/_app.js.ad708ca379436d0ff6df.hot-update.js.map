{"version":3,"file":"static/webpack/static/development/pages/_app.js.ad708ca379436d0ff6df.hot-update.js","sources":["webpack:///./rest-client/index.tsx"],"sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport {\n  GetBesucherByFilterInput,\n  GetBesucherByFilterResponse,\n  SetBesuchEndzeitpunktInput,\n} from '../types';\n\nfunction fetcher(baseURL: string) {\n  async function fetchRessource(\n    url: string,\n    fetchOptions?: object\n  ): Promise<any> {\n    const u = `${baseURL}${url}`;\n    try {\n      const xhr = await fetch(u, fetchOptions);\n      if (xhr.ok) return xhr.json();\n    } catch (error) {\n      throw new Error(`Unexpected error during fetch of URL ${u}: ${error}`);\n    }\n  }\n  return fetchRessource;\n}\n\nexport default class RestClient {\n  fetcher: (url: string, options?: any) => Promise<any>;\n  constructor(url: string) {\n    this.fetcher = fetcher(url);\n  }\n  async login(props: { email: string; password: string }) {\n    return this.fetcher(`Auth/Login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async register(props: {\n    sicherheitsfrage: string;\n    rolle: string;\n    person: { name: string; vorname: string; email: string; telefon: string };\n  }) {\n    return this.fetcher(`Auth/Register`, {\n      method: 'POST',\n      hedaders: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async postBesuch(props: { besucher: Array<number>; raeume: Array<number> }) {\n    return this.fetcher(`Besuch`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async setBesuchEndzeitpunkt(input: SetBesuchEndzeitpunktInput) {\n    return this.fetcher(`Besuch/SetEndzeitpunkt`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/jsoon',\n      },\n      body: JSON.stringify(input),\n    });\n  }\n  async getBesucherByFilter(\n    input: GetBesucherByFilterInput\n  ): Promise<GetBesucherByFilterResponse> {\n    return this.fetcher(`Besuch/GetByFilter`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(input),\n    });\n  }\n  async postBesucher(props: {\n    person: { name: string; vorname: string; email: string; telefon: string };\n    gesundheitsstatus: string;\n  }) {\n    return this.fetcher(`Besucher`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(props),\n    });\n  }\n  async getGebauede() {\n    return this.fetcher(`Gebaeude`, {\n      method: 'GET',\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAJA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;;;AAAA;;;;;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;;;;;;;;;;AAOA;;;;;AAKA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;;;;;;;;;;AAOA;;;;;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;;;;;;;;;;AAOA;;;;;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;;;;;;;;;;AAQA;;;;;AAEA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;;;;;;;;;;AAOA;;;;;AAIA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;;;;;;;;;;;;;;;AAQA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;A","sourceRoot":""}