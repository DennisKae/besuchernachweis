{"version":3,"file":"static/webpack/static/development/pages/_app.js.52b6d385579c75162d90.hot-update.js","sources":["webpack:///./components/Sidebar/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport {\n  Drawer,\n  Divider,\n  List,\n  ListItem,\n  Button,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\nimport InputIcon from '@material-ui/icons/Input';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport DomainIcon from '@material-ui/icons/Domain';\nimport {\n  SidebarProps,\n  SidebarNavProps,\n  SidebarListItemProps,\n} from '../../types';\nimport useTranslations from '../../hooks/useTranslations';\nimport { locales } from '../../utils/locales';\nimport Profile from '../Profile';\nimport useStyles from './style';\n\nconst SidebarNav: React.FunctionComponent<SidebarNavProps> = ({ items }) => {\n  const classes = useStyles();\n  return (\n    <List className={classes.nav}>\n      {items.map((item, index) => (\n        <ListItem className={classes.item} disableGutters key={index}>\n          <Link href={item.link.href} as={item.link.as}>\n            <Button className={classes.button}>\n              <div className={classes.icon}>{item.icon}</div>\n              {item.title}\n            </Button>\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nconst Sidebar: React.FunctionComponent<SidebarProps> = ({\n  open,\n  variant,\n  onClose,\n}) => {\n  const classes = useStyles();\n  const { locale, t } = useTranslations();\n  const router = useRouter();\n\n  const items: Array<SidebarListItemProps> = [\n    {\n      title: t('navigation-register-visitor'),\n      link: {\n        href: `/[locale]/visitor/register`,\n        as: `/${locale}/visitor/register`,\n      },\n      icon: <PersonAddIcon />,\n    },\n    {\n      title: t('navigation-cancle-visitor'),\n      link: {\n        href: `/[locale]/visitor/cancle`,\n        as: `/${locale}/visitor/cancle`,\n      },\n      icon: <InputIcon />,\n    },\n    {\n      title: t('navigation-property-management'),\n      link: {\n        href: `/[locale]/property`,\n        as: `/${locale}/property`,\n      },\n      icon: <DomainIcon />,\n    },\n  ];\n\n  const handleLocaleChange = React.useCallback(\n    (val: string) => {\n      const regex = new RegExp(`^/(${locales.join('|')})`);\n      router.push(router.pathname, router.asPath.replace(regex, `/${val}`));\n    },\n    [router]\n  );\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      classes={{ paper: classes.drawer }}\n      onClose={onClose}\n      open={open}\n      variant={variant}\n    >\n      <div className={classes.root}>\n        <Select\n          value={locale}\n          onChange={event => handleLocaleChange(event.target.value as string)}\n        >\n          {locales.map(locale => (\n            <MenuItem key={locale} value={locale}>\n              {locale.toUpperCase()}\n            </MenuItem>\n          ))}\n        </Select>\n        <Profile name=\"Max Mustermann\" role=\"Angestellter\" />\n        <Divider />\n        <SidebarNav items={items} />\n      </div>\n    </Drawer>\n  );\n};\n\nexport default Sidebar;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AASA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAYA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AASA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AASA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAUA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}