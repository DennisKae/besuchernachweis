{"version":3,"file":"static/webpack/static/development/pages/[locale]/visitor/register.js.a93d85dd98b1729bcdd2.hot-update.js","sources":["webpack:///./components/RegisterVisit/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Grid,\n  Typography,\n  Paper,\n  Input,\n  InputLabel,\n  FormControl,\n  Select,\n  MenuItem,\n  Button,\n} from '@material-ui/core';\nimport Table from '../Table';\nimport useTranslations from '../../hooks/useTranslations';\nimport useStyles from './style';\n\nconst INITIAL_FORM_STATE = {\n  firstName: '',\n  name: '',\n  email: '',\n  phone: '',\n  building: 0,\n  rooms: [],\n  permissionGranted: false,\n};\n\nconst CreateNewUser: React.FunctionComponent<{\n  buildings: any;\n  onRegister: (props: any) => void;\n}> = ({ onRegister, buildings }) => {\n  const { t } = useTranslations();\n  const classes = useStyles();\n  const [formState, setFormState] = React.useState<any>(INITIAL_FORM_STATE);\n  const [rooms, setRooms] = React.useState<any>(null);\n  return (\n    <Paper className={classes.contentContainer}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Input\n            className={classes.input}\n            placeholder={t('register-first-name')}\n            value={formState.firstName}\n            onChange={event =>\n              setFormState({ ...formState, firstName: event.target.value })\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Input\n            className={classes.input}\n            placeholder={t('register-name')}\n            value={formState.name}\n            onChange={event =>\n              setFormState({ ...formState, name: event.target.value })\n            }\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Input\n            className={classes.input}\n            type=\"email\"\n            placeholder={t('register-email')}\n            value={formState.email}\n            onChange={event =>\n              setFormState({ ...formState, email: event.target.value })\n            }\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Input\n            className={classes.input}\n            placeholder={t('register-phone')}\n            value={formState.phone}\n            onChange={event =>\n              setFormState({ ...formState, phone: event.target.value })\n            }\n          />\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <FormControl style={{ width: '100%' }}>\n            <InputLabel>Gebäude</InputLabel>\n            <Select\n              value={formState.building}\n              onChange={event => {\n                setFormState({\n                  ...formState,\n                  building: event.target.value,\n                });\n                const rooms = buildings\n                  .filter((b: any) => b.id === event.target.value)\n                  .map((v: any) => v.raeume);\n                if (rooms) setRooms(rooms[0]);\n              }}\n            >\n              {buildings &&\n                buildings.length > 0 &&\n                buildings.map((building: any, index: number) => (\n                  <MenuItem key={index} value={building.id}>\n                    {building.bezeichnung}\n                  </MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <FormControl style={{ width: '100%' }}>\n            <InputLabel>{t('property-rooms')}</InputLabel>\n            {rooms && rooms.length > 0 && (\n              <Select\n                value={formState.rooms}\n                onChange={event => {\n                  setFormState({\n                    ...formState,\n                    rooms: event.target.value,\n                  });\n                }}\n                multiple\n                input={<Input />}\n              >\n                {rooms.map((room: any, index: number) => {\n                  return (\n                    <MenuItem key={index} value={room.id}>\n                      {room.bezeichnung}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            )}\n          </FormControl>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              onRegister(formState);\n              setFormState(INITIAL_FORM_STATE);\n            }}\n          >\n            {t('register')}\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nconst RegisterVisit: React.FunctionComponent<{\n  buildings: any;\n  createNewVisitor: (props: any) => void;\n}> = ({ createNewVisitor, buildings }) => {\n  // hooks\n  const classes = useStyles();\n  const { t } = useTranslations();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"body1\">{t('administration')}</Typography>\n          <Typography variant=\"h6\">{t('visitor-register')}</Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"body1\">Registrieter Besucher</Typography>\n          <Typography variant=\"h6\">Besucher auswählen</Typography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4}>\n        <Grid item xs={12} sm={6}>\n          <CreateNewUser\n            onRegister={props => createNewVisitor(props)}\n            buildings={buildings}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Table\n            rows={[]}\n            rowsPerPageOptions={[25, 50, 100]}\n            count={1}\n            rowsPerPage={25}\n            page={0}\n            onChangePage={() => {}}\n            onChangeRowsPerPage={() => {}}\n            onClickRow={() => {}}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default RegisterVisit;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AAGA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeccA;AACA;AACA;;;;A","sourceRoot":""}